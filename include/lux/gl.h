#pragma once

#include "api.h"
LX_BEGIN_HEADER

#include <stddef.h>
#include <stdint.h>

// convenience macros
// ----------------------------------------------------------------

#ifdef _WIN32
    #define LX_GL_API __stdcall
#else
    #define LX_GL_API
#endif
#define LX_GL_API_PTR LX_GL_API*

// opengl 1.0 to 4.6 types and* definitions
// ----------------------------------------------------------------

typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef char GLchar;
typedef unsigned short GLhalf;
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef struct __GLsync *GLsync;
typedef void (LX_GL_API_PTR GLDEBUGPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* message, const void* userParam);

#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_ALPHA 0x1906
#define GL_ALREADY_SIGNALED 0x911A
#define GL_ALWAYS 0x0207
#define GL_AND 0x1501
#define GL_AND_INVERTED 0x1504
#define GL_AND_REVERSE 0x1502
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_ARRAY_BUFFER 0x8892
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ARRAY_SIZE 0x92FB
#define GL_ARRAY_STRIDE 0x92FE
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_BACK 0x0405
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_BGRA_INTEGER 0x8D9B
#define GL_BGR_INTEGER 0x8D9A
#define GL_BLEND 0x0BE2
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_EQUATION 0x8009
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLOCK_INDEX 0x92FD
#define GL_BLUE 0x1905
#define GL_BLUE_INTEGER 0x8D96
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_BUFFER 0x82E0
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_BUFFER_USAGE 0x8765
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_BYTE 0x1400
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_CCW 0x0901
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_CLEAR 0x1500
#define GL_CLEAR_BUFFER 0x82B4
#define GL_CLEAR_TEXTURE 0x9365
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIPPING_INPUT_PRIMITIVES 0x82F6
#define GL_CLIPPING_OUTPUT_PRIMITIVES 0x82F7
#define GL_CLIP_DEPTH_MODE 0x935D
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_CLIP_ORIGIN 0x935C
#define GL_COLOR 0x1800
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_COMPONENTS 0x8283
#define GL_COLOR_ENCODING 0x8296
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_COLOR_RENDERABLE 0x8286
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_COMPILE_STATUS 0x8B81
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_RG 0x8226
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_COMPUTE_SHADER 0x91B9
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_COMPUTE_SHADER_INVOCATIONS 0x82F5
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_CONDITION_SATISFIED 0x911C
#define GL_CONSTANT_ALPHA 0x8003
#define GL_CONSTANT_COLOR 0x8001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_FLAGS 0x821E
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_CONTEXT_FLAG_NO_ERROR_BIT 0x00000008
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_CONTEXT_LOST 0x0507
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#define GL_COPY 0x1503
#define GL_COPY_INVERTED 0x150C
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_CURRENT_QUERY 0x8865
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_CW 0x0900
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DECR 0x1E03
#define GL_DECR_WRAP 0x8508
#define GL_DELETE_STATUS 0x8B80
#define GL_DEPTH 0x1801
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_DEPTH_CLAMP 0x864F
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_COMPONENT 0x1902
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_DEPTH_FUNC 0x0B74
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_DEPTH_STENCIL 0x84F9
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_DITHER 0x0BD0
#define GL_DONT_CARE 0x1100
#define GL_DOUBLE 0x140A
#define GL_DOUBLEBUFFER 0x0C32
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DRAW_BUFFER 0x0C01
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_DST_ALPHA 0x0304
#define GL_DST_COLOR 0x0306
#define GL_DYNAMIC_COPY 0x88EA
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_EQUAL 0x0202
#define GL_EQUIV 0x1509
#define GL_EXTENSIONS 0x1F03
#define GL_FALSE 0
#define GL_FASTEST 0x1101
#define GL_FILL 0x1B02
#define GL_FILTER 0x829A
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_FIXED 0x140C
#define GL_FIXED_ONLY 0x891D
#define GL_FLOAT 0x1406
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4 0x8B5C
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_FRAGMENT_SHADER_INVOCATIONS 0x82F4
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_FRAMEBUFFER 0x8D40
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_FRONT 0x0404
#define GL_FRONT_AND_BACK 0x0408
#define GL_FRONT_FACE 0x0B46
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_FULL_SUPPORT 0x82B7
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED 0x82F3
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEQUAL 0x0206
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_GREATER 0x0204
#define GL_GREEN 0x1904
#define GL_GREEN_INTEGER 0x8D95
#define GL_GUILTY_CONTEXT_RESET 0x8253
#define GL_HALF_FLOAT 0x140B
#define GL_HIGH_FLOAT 0x8DF2
#define GL_HIGH_INT 0x8DF5
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_INCR 0x1E02
#define GL_INCR_WRAP 0x8507
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#define GL_INT 0x1404
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_INVALID_OPERATION 0x0502
#define GL_INVALID_VALUE 0x0501
#define GL_INVERT 0x150A
#define GL_ISOLINES 0x8E7A
#define GL_IS_PER_PATCH 0x92E7
#define GL_IS_ROW_MAJOR 0x9300
#define GL_KEEP 0x1E00
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_LEFT 0x0406
#define GL_LEQUAL 0x0203
#define GL_LESS 0x0201
#define GL_LINE 0x1B01
#define GL_LINEAR 0x2601
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_LINES 0x0001
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_LOOP 0x0002
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_LINE_STRIP 0x0003
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINK_STATUS 0x8B82
#define GL_LOCATION 0x930E
#define GL_LOCATION_COMPONENT 0x934A
#define GL_LOCATION_INDEX 0x930F
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#define GL_LOWER_LEFT 0x8CA1
#define GL_LOW_FLOAT 0x8DF0
#define GL_LOW_INT 0x8DF3
#define GL_MAJOR_VERSION 0x821B
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MATRIX_STRIDE 0x92FF
#define GL_MAX 0x8008
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_MAX_CULL_DISTANCES 0x82F9
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_MAX_SAMPLES 0x8D57
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_MAX_TEXTURE_MAX_ANISOTROPY 0x84FF
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VIEWPORTS 0x825B
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_MAX_WIDTH 0x827E
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_MEDIUM_INT 0x8DF4
#define GL_MIN 0x8007
#define GL_MINOR_VERSION 0x821C
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIPMAP 0x8293
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#define GL_MULTISAMPLE 0x809D
#define GL_NAME_LENGTH 0x92F9
#define GL_NAND 0x150E
#define GL_NEAREST 0x2600
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_NEGATIVE_ONE_TO_ONE 0x935E
#define GL_NEVER 0x0200
#define GL_NICEST 0x1102
#define GL_NONE 0
#define GL_NOOP 0x1505
#define GL_NOR 0x1508
#define GL_NOTEQUAL 0x0205
#define GL_NO_ERROR 0
#define GL_NO_RESET_NOTIFICATION 0x8261
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_NUM_EXTENSIONS 0x821D
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_NUM_SPIR_V_EXTENSIONS 0x9554
#define GL_OBJECT_TYPE 0x9112
#define GL_OFFSET 0x92FC
#define GL_ONE 1
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_OR 0x1507
#define GL_OR_INVERTED 0x150D
#define GL_OR_REVERSE 0x150B
#define GL_OUT_OF_MEMORY 0x0505
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PARAMETER_BUFFER 0x80EE
#define GL_PARAMETER_BUFFER_BINDING 0x80EF
#define GL_PATCHES 0x000E
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_PATCH_VERTICES 0x8E72
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_POINT 0x1B00
#define GL_POINTS 0x0000
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_OFFSET_CLAMP 0x8E1B
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_PRIMITIVES_SUBMITTED 0x82EF
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_PROGRAM 0x82E2
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_QUADS 0x0007
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_QUERY 0x82E3
#define GL_QUERY_BUFFER 0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#define GL_QUERY_BUFFER_BINDING 0x9193
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#define GL_QUERY_TARGET 0x82EA
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_WAIT_INVERTED 0x8E17
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_R16 0x822A
#define GL_R16F 0x822D
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R16_SNORM 0x8F98
#define GL_R32F 0x822E
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_R3_G3_B2 0x2A10
#define GL_R8 0x8229
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R8_SNORM 0x8F94
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_READ_BUFFER 0x0C02
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_READ_ONLY 0x88B8
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_READ_WRITE 0x88BA
#define GL_RED 0x1903
#define GL_RED_INTEGER 0x8D94
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERER 0x1F01
#define GL_REPEAT 0x2901
#define GL_REPLACE 0x1E01
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#define GL_RG 0x8227
#define GL_RG16 0x822C
#define GL_RG16F 0x822F
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG16_SNORM 0x8F99
#define GL_RG32F 0x8230
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_RG8 0x822B
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG8_SNORM 0x8F95
#define GL_RGB 0x1907
#define GL_RGB10 0x8052
#define GL_RGB10_A2 0x8059
#define GL_RGB10_A2UI 0x906F
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGB16F 0x881B
#define GL_RGB16I 0x8D89
#define GL_RGB16UI 0x8D77
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGB32F 0x8815
#define GL_RGB32I 0x8D83
#define GL_RGB32UI 0x8D71
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB565 0x8D62
#define GL_RGB5_A1 0x8057
#define GL_RGB8 0x8051
#define GL_RGB8I 0x8D8F
#define GL_RGB8UI 0x8D7D
#define GL_RGB8_SNORM 0x8F96
#define GL_RGB9_E5 0x8C3D
#define GL_RGBA 0x1908
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_RGBA16F 0x881A
#define GL_RGBA16I 0x8D88
#define GL_RGBA16UI 0x8D76
#define GL_RGBA16_SNORM 0x8F9B
#define GL_RGBA2 0x8055
#define GL_RGBA32F 0x8814
#define GL_RGBA32I 0x8D82
#define GL_RGBA32UI 0x8D70
#define GL_RGBA4 0x8056
#define GL_RGBA8 0x8058
#define GL_RGBA8I 0x8D8E
#define GL_RGBA8UI 0x8D7C
#define GL_RGBA8_SNORM 0x8F97
#define GL_RGBA_INTEGER 0x8D99
#define GL_RGB_INTEGER 0x8D98
#define GL_RG_INTEGER 0x8228
#define GL_RIGHT 0x0407
#define GL_SAMPLER 0x82E6
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_BINDING 0x8919
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_SAMPLES 0x80A9
#define GL_SAMPLES_PASSED 0x8914
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_SHADING 0x8C36
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_SET 0x150F
#define GL_SHADER 0x82E1
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_SHADER_BINARY_FORMAT_SPIR_V 0x9551
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_TYPE 0x8B4F
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_SHORT 0x1402
#define GL_SIGNALED 0x9119
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SPIR_V_BINARY 0x9552
#define GL_SPIR_V_EXTENSIONS 0x9553
#define GL_SRC1_ALPHA 0x8589
#define GL_SRC1_COLOR 0x88F9
#define GL_SRC_ALPHA 0x0302
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_SRC_COLOR 0x0300
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STATIC_COPY 0x88E6
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STENCIL 0x1802
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX16 0x8D49
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_STEREO 0x0C33
#define GL_STREAM_COPY 0x88E2
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_SYNC_STATUS 0x9114
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_CONTROL_SHADER_PATCHES 0x82F1
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS 0x82F2
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TEXTURE 0x1702
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_TEXTURE_3D 0x806F
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MAX_ANISOTROPY 0x84FE
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TEXTURE_TARGET 0x1006
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_TEXTURE_VIEW 0x82B5
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_TIMESTAMP 0x8E28
#define GL_TIME_ELAPSED 0x88BF
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_TRANSFORM_FEEDBACK_OVERFLOW 0x82EC
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW 0x82ED
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_FAN 0x0006
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_TRUE 1
#define GL_TYPE 0x92FA
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNSIGNALED 0x9118
#define GL_UNSIGNED_BYTE 0x1401
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_INT 0x1405
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_UNSIGNED_SHORT 0x1403
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UPPER_LEFT 0x8CA2
#define GL_VALIDATE_STATUS 0x8B83
#define GL_VENDOR 0x1F00
#define GL_VERSION 0x1F02
#define GL_VERTEX_ARRAY 0x8074
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_SHADER 0x8B31
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_VERTEX_SHADER_INVOCATIONS 0x82F0
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_VERTEX_TEXTURE 0x829B
#define GL_VERTICES_SUBMITTED 0x82EE
#define GL_VIEWPORT 0x0BA2
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_WAIT_FAILED 0x911D
#define GL_WRITE_ONLY 0x88B9
#define GL_XOR 0x1506
#define GL_ZERO 0
#define GL_ZERO_TO_ONE 0x935F


// opengl 1.0
// ----------------------------------------------------------------


typedef void (LX_GL_API_PTR PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
LX_API extern PFNGLBLENDFUNCPROC lx_glBlendFunc;
#define glBlendFunc lx_glBlendFunc

typedef void (LX_GL_API_PTR PFNGLCLEARPROC)(GLbitfield mask);
LX_API extern PFNGLCLEARPROC lx_glClear;
#define glClear lx_glClear

typedef void (LX_GL_API_PTR PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
LX_API extern PFNGLCLEARCOLORPROC lx_glClearColor;
#define glClearColor lx_glClearColor

typedef void (LX_GL_API_PTR PFNGLCLEARDEPTHPROC)(GLdouble depth);
LX_API extern PFNGLCLEARDEPTHPROC lx_glClearDepth;
#define glClearDepth lx_glClearDepth

typedef void (LX_GL_API_PTR PFNGLCLEARSTENCILPROC)(GLint s);
LX_API extern PFNGLCLEARSTENCILPROC lx_glClearStencil;
#define glClearStencil lx_glClearStencil

typedef void (LX_GL_API_PTR PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
LX_API extern PFNGLCOLORMASKPROC lx_glColorMask;
#define glColorMask lx_glColorMask

typedef void (LX_GL_API_PTR PFNGLCULLFACEPROC)(GLenum mode);
LX_API extern PFNGLCULLFACEPROC lx_glCullFace;
#define glCullFace lx_glCullFace

typedef void (LX_GL_API_PTR PFNGLDEPTHFUNCPROC)(GLenum func);
LX_API extern PFNGLDEPTHFUNCPROC lx_glDepthFunc;
#define glDepthFunc lx_glDepthFunc

typedef void (LX_GL_API_PTR PFNGLDEPTHMASKPROC)(GLboolean flag);
LX_API extern PFNGLDEPTHMASKPROC lx_glDepthMask;
#define glDepthMask lx_glDepthMask

typedef void (LX_GL_API_PTR PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
LX_API extern PFNGLDEPTHRANGEPROC lx_glDepthRange;
#define glDepthRange lx_glDepthRange

typedef void (LX_GL_API_PTR PFNGLDISABLEPROC)(GLenum cap);
LX_API extern PFNGLDISABLEPROC lx_glDisable;
#define glDisable lx_glDisable

typedef void (LX_GL_API_PTR PFNGLDRAWBUFFERPROC)(GLenum buf);
LX_API extern PFNGLDRAWBUFFERPROC lx_glDrawBuffer;
#define glDrawBuffer lx_glDrawBuffer

typedef void (LX_GL_API_PTR PFNGLENABLEPROC)(GLenum cap);
LX_API extern PFNGLENABLEPROC lx_glEnable;
#define glEnable lx_glEnable

typedef void (LX_GL_API_PTR PFNGLFINISHPROC)(void);
LX_API extern PFNGLFINISHPROC lx_glFinish;
#define glFinish lx_glFinish

typedef void (LX_GL_API_PTR PFNGLFLUSHPROC)(void);
LX_API extern PFNGLFLUSHPROC lx_glFlush;
#define glFlush lx_glFlush

typedef void (LX_GL_API_PTR PFNGLFRONTFACEPROC)(GLenum mode);
LX_API extern PFNGLFRONTFACEPROC lx_glFrontFace;
#define glFrontFace lx_glFrontFace

typedef void (LX_GL_API_PTR PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean* data);
LX_API extern PFNGLGETBOOLEANVPROC lx_glGetBooleanv;
#define glGetBooleanv lx_glGetBooleanv

typedef void (LX_GL_API_PTR PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble* data);
LX_API extern PFNGLGETDOUBLEVPROC lx_glGetDoublev;
#define glGetDoublev lx_glGetDoublev

typedef GLenum (LX_GL_API_PTR PFNGLGETERRORPROC)(void);
LX_API extern PFNGLGETERRORPROC lx_glGetError;
#define glGetError lx_glGetError

typedef void (LX_GL_API_PTR PFNGLGETFLOATVPROC)(GLenum pname, GLfloat* data);
LX_API extern PFNGLGETFLOATVPROC lx_glGetFloatv;
#define glGetFloatv lx_glGetFloatv

typedef void (LX_GL_API_PTR PFNGLGETINTEGERVPROC)(GLenum pname, GLint* data);
LX_API extern PFNGLGETINTEGERVPROC lx_glGetIntegerv;
#define glGetIntegerv lx_glGetIntegerv

typedef GLubyte* (LX_GL_API_PTR PFNGLGETSTRINGPROC)(GLenum name);
LX_API extern PFNGLGETSTRINGPROC lx_glGetString;
#define glGetString lx_glGetString

typedef void (LX_GL_API_PTR PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void* pixels);
LX_API extern PFNGLGETTEXIMAGEPROC lx_glGetTexImage;
#define glGetTexImage lx_glGetTexImage

typedef void (LX_GL_API_PTR PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat* params);
LX_API extern PFNGLGETTEXLEVELPARAMETERFVPROC lx_glGetTexLevelParameterfv;
#define glGetTexLevelParameterfv lx_glGetTexLevelParameterfv

typedef void (LX_GL_API_PTR PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint* params);
LX_API extern PFNGLGETTEXLEVELPARAMETERIVPROC lx_glGetTexLevelParameteriv;
#define glGetTexLevelParameteriv lx_glGetTexLevelParameteriv

typedef void (LX_GL_API_PTR PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat* params);
LX_API extern PFNGLGETTEXPARAMETERFVPROC lx_glGetTexParameterfv;
#define glGetTexParameterfv lx_glGetTexParameterfv

typedef void (LX_GL_API_PTR PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
LX_API extern PFNGLGETTEXPARAMETERIVPROC lx_glGetTexParameteriv;
#define glGetTexParameteriv lx_glGetTexParameteriv

typedef void (LX_GL_API_PTR PFNGLHINTPROC)(GLenum target, GLenum mode);
LX_API extern PFNGLHINTPROC lx_glHint;
#define glHint lx_glHint

typedef GLboolean (LX_GL_API_PTR PFNGLISENABLEDPROC)(GLenum cap);
LX_API extern PFNGLISENABLEDPROC lx_glIsEnabled;
#define glIsEnabled lx_glIsEnabled

typedef void (LX_GL_API_PTR PFNGLLINEWIDTHPROC)(GLfloat width);
LX_API extern PFNGLLINEWIDTHPROC lx_glLineWidth;
#define glLineWidth lx_glLineWidth

typedef void (LX_GL_API_PTR PFNGLLOGICOPPROC)(GLenum opcode);
LX_API extern PFNGLLOGICOPPROC lx_glLogicOp;
#define glLogicOp lx_glLogicOp

typedef void (LX_GL_API_PTR PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
LX_API extern PFNGLPIXELSTOREFPROC lx_glPixelStoref;
#define glPixelStoref lx_glPixelStoref

typedef void (LX_GL_API_PTR PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
LX_API extern PFNGLPIXELSTOREIPROC lx_glPixelStorei;
#define glPixelStorei lx_glPixelStorei

typedef void (LX_GL_API_PTR PFNGLPOINTSIZEPROC)(GLfloat size);
LX_API extern PFNGLPOINTSIZEPROC lx_glPointSize;
#define glPointSize lx_glPointSize

typedef void (LX_GL_API_PTR PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
LX_API extern PFNGLPOLYGONMODEPROC lx_glPolygonMode;
#define glPolygonMode lx_glPolygonMode

typedef void (LX_GL_API_PTR PFNGLREADBUFFERPROC)(GLenum src);
LX_API extern PFNGLREADBUFFERPROC lx_glReadBuffer;
#define glReadBuffer lx_glReadBuffer

typedef void (LX_GL_API_PTR PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void* pixels);
LX_API extern PFNGLREADPIXELSPROC lx_glReadPixels;
#define glReadPixels lx_glReadPixels

typedef void (LX_GL_API_PTR PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
LX_API extern PFNGLSCISSORPROC lx_glScissor;
#define glScissor lx_glScissor

typedef void (LX_GL_API_PTR PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
LX_API extern PFNGLSTENCILFUNCPROC lx_glStencilFunc;
#define glStencilFunc lx_glStencilFunc

typedef void (LX_GL_API_PTR PFNGLSTENCILMASKPROC)(GLuint mask);
LX_API extern PFNGLSTENCILMASKPROC lx_glStencilMask;
#define glStencilMask lx_glStencilMask

typedef void (LX_GL_API_PTR PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
LX_API extern PFNGLSTENCILOPPROC lx_glStencilOp;
#define glStencilOp lx_glStencilOp

typedef void (LX_GL_API_PTR PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void* pixels);
LX_API extern PFNGLTEXIMAGE1DPROC lx_glTexImage1D;
#define glTexImage1D lx_glTexImage1D

typedef void (LX_GL_API_PTR PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels);
LX_API extern PFNGLTEXIMAGE2DPROC lx_glTexImage2D;
#define glTexImage2D lx_glTexImage2D

typedef void (LX_GL_API_PTR PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
LX_API extern PFNGLTEXPARAMETERFPROC lx_glTexParameterf;
#define glTexParameterf lx_glTexParameterf

typedef void (LX_GL_API_PTR PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat* params);
LX_API extern PFNGLTEXPARAMETERFVPROC lx_glTexParameterfv;
#define glTexParameterfv lx_glTexParameterfv

typedef void (LX_GL_API_PTR PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
LX_API extern PFNGLTEXPARAMETERIPROC lx_glTexParameteri;
#define glTexParameteri lx_glTexParameteri

typedef void (LX_GL_API_PTR PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint* params);
LX_API extern PFNGLTEXPARAMETERIVPROC lx_glTexParameteriv;
#define glTexParameteriv lx_glTexParameteriv

typedef void (LX_GL_API_PTR PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
LX_API extern PFNGLVIEWPORTPROC lx_glViewport;
#define glViewport lx_glViewport

// opengl 1.1
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
LX_API extern PFNGLBINDTEXTUREPROC lx_glBindTexture;
#define glBindTexture lx_glBindTexture

typedef void (LX_GL_API_PTR PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
LX_API extern PFNGLCOPYTEXIMAGE1DPROC lx_glCopyTexImage1D;
#define glCopyTexImage1D lx_glCopyTexImage1D

typedef void (LX_GL_API_PTR PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
LX_API extern PFNGLCOPYTEXIMAGE2DPROC lx_glCopyTexImage2D;
#define glCopyTexImage2D lx_glCopyTexImage2D

typedef void (LX_GL_API_PTR PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
LX_API extern PFNGLCOPYTEXSUBIMAGE1DPROC lx_glCopyTexSubImage1D;
#define glCopyTexSubImage1D lx_glCopyTexSubImage1D

typedef void (LX_GL_API_PTR PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
LX_API extern PFNGLCOPYTEXSUBIMAGE2DPROC lx_glCopyTexSubImage2D;
#define glCopyTexSubImage2D lx_glCopyTexSubImage2D

typedef void (LX_GL_API_PTR PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint* textures);
LX_API extern PFNGLDELETETEXTURESPROC lx_glDeleteTextures;
#define glDeleteTextures lx_glDeleteTextures

typedef void (LX_GL_API_PTR PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
LX_API extern PFNGLDRAWARRAYSPROC lx_glDrawArrays;
#define glDrawArrays lx_glDrawArrays

typedef void (LX_GL_API_PTR PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices);
LX_API extern PFNGLDRAWELEMENTSPROC lx_glDrawElements;
#define glDrawElements lx_glDrawElements

typedef void (LX_GL_API_PTR PFNGLGENTEXTURESPROC)(GLsizei n, GLuint* textures);
LX_API extern PFNGLGENTEXTURESPROC lx_glGenTextures;
#define glGenTextures lx_glGenTextures

typedef void (LX_GL_API_PTR PFNGLGETPOINTERVPROC)(GLenum pname, void ** params);
LX_API extern PFNGLGETPOINTERVPROC lx_glGetPointerv;
#define glGetPointerv lx_glGetPointerv

typedef GLboolean (LX_GL_API_PTR PFNGLISTEXTUREPROC)(GLuint texture);
LX_API extern PFNGLISTEXTUREPROC lx_glIsTexture;
#define glIsTexture lx_glIsTexture

typedef void (LX_GL_API_PTR PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
LX_API extern PFNGLPOLYGONOFFSETPROC lx_glPolygonOffset;
#define glPolygonOffset lx_glPolygonOffset

typedef void (LX_GL_API_PTR PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels);
LX_API extern PFNGLTEXSUBIMAGE1DPROC lx_glTexSubImage1D;
#define glTexSubImage1D lx_glTexSubImage1D

typedef void (LX_GL_API_PTR PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
LX_API extern PFNGLTEXSUBIMAGE2DPROC lx_glTexSubImage2D;
#define glTexSubImage2D lx_glTexSubImage2D

// opengl 1.2
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
LX_API extern PFNGLCOPYTEXSUBIMAGE3DPROC lx_glCopyTexSubImage3D;
#define glCopyTexSubImage3D lx_glCopyTexSubImage3D

typedef void (LX_GL_API_PTR PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void* indices);
LX_API extern PFNGLDRAWRANGEELEMENTSPROC lx_glDrawRangeElements;
#define glDrawRangeElements lx_glDrawRangeElements

typedef void (LX_GL_API_PTR PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void* pixels);
LX_API extern PFNGLTEXIMAGE3DPROC lx_glTexImage3D;
#define glTexImage3D lx_glTexImage3D

typedef void (LX_GL_API_PTR PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels);
LX_API extern PFNGLTEXSUBIMAGE3DPROC lx_glTexSubImage3D;
#define glTexSubImage3D lx_glTexSubImage3D

// opengl 1.3
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLACTIVETEXTUREPROC)(GLenum texture);
LX_API extern PFNGLACTIVETEXTUREPROC lx_glActiveTexture;
#define glActiveTexture lx_glActiveTexture

typedef void (LX_GL_API_PTR PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void* data);
LX_API extern PFNGLCOMPRESSEDTEXIMAGE1DPROC lx_glCompressedTexImage1D;
#define glCompressedTexImage1D lx_glCompressedTexImage1D

typedef void (LX_GL_API_PTR PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data);
LX_API extern PFNGLCOMPRESSEDTEXIMAGE2DPROC lx_glCompressedTexImage2D;
#define glCompressedTexImage2D lx_glCompressedTexImage2D

typedef void (LX_GL_API_PTR PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void* data);
LX_API extern PFNGLCOMPRESSEDTEXIMAGE3DPROC lx_glCompressedTexImage3D;
#define glCompressedTexImage3D lx_glCompressedTexImage3D

typedef void (LX_GL_API_PTR PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data);
LX_API extern PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC lx_glCompressedTexSubImage1D;
#define glCompressedTexSubImage1D lx_glCompressedTexSubImage1D

typedef void (LX_GL_API_PTR PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
LX_API extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC lx_glCompressedTexSubImage2D;
#define glCompressedTexSubImage2D lx_glCompressedTexSubImage2D

typedef void (LX_GL_API_PTR PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data);
LX_API extern PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC lx_glCompressedTexSubImage3D;
#define glCompressedTexSubImage3D lx_glCompressedTexSubImage3D

typedef void (LX_GL_API_PTR PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void* img);
LX_API extern PFNGLGETCOMPRESSEDTEXIMAGEPROC lx_glGetCompressedTexImage;
#define glGetCompressedTexImage lx_glGetCompressedTexImage

typedef void (LX_GL_API_PTR PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
LX_API extern PFNGLSAMPLECOVERAGEPROC lx_glSampleCoverage;
#define glSampleCoverage lx_glSampleCoverage

// opengl 1.4
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
LX_API extern PFNGLBLENDCOLORPROC lx_glBlendColor;
#define glBlendColor lx_glBlendColor

typedef void (LX_GL_API_PTR PFNGLBLENDEQUATIONPROC)(GLenum mode);
LX_API extern PFNGLBLENDEQUATIONPROC lx_glBlendEquation;
#define glBlendEquation lx_glBlendEquation

typedef void (LX_GL_API_PTR PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
LX_API extern PFNGLBLENDFUNCSEPARATEPROC lx_glBlendFuncSeparate;
#define glBlendFuncSeparate lx_glBlendFuncSeparate

typedef void (LX_GL_API_PTR PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint* first, const GLsizei* count, GLsizei drawcount);
LX_API extern PFNGLMULTIDRAWARRAYSPROC lx_glMultiDrawArrays;
#define glMultiDrawArrays lx_glMultiDrawArrays

typedef void (LX_GL_API_PTR PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei* count, GLenum type, const void *const* indices, GLsizei drawcount);
LX_API extern PFNGLMULTIDRAWELEMENTSPROC lx_glMultiDrawElements;
#define glMultiDrawElements lx_glMultiDrawElements

typedef void (LX_GL_API_PTR PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
LX_API extern PFNGLPOINTPARAMETERFPROC lx_glPointParameterf;
#define glPointParameterf lx_glPointParameterf

typedef void (LX_GL_API_PTR PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat* params);
LX_API extern PFNGLPOINTPARAMETERFVPROC lx_glPointParameterfv;
#define glPointParameterfv lx_glPointParameterfv

typedef void (LX_GL_API_PTR PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
LX_API extern PFNGLPOINTPARAMETERIPROC lx_glPointParameteri;
#define glPointParameteri lx_glPointParameteri

typedef void (LX_GL_API_PTR PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint* params);
LX_API extern PFNGLPOINTPARAMETERIVPROC lx_glPointParameteriv;
#define glPointParameteriv lx_glPointParameteriv

// opengl 1.5
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
LX_API extern PFNGLBEGINQUERYPROC lx_glBeginQuery;
#define glBeginQuery lx_glBeginQuery

typedef void (LX_GL_API_PTR PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
LX_API extern PFNGLBINDBUFFERPROC lx_glBindBuffer;
#define glBindBuffer lx_glBindBuffer

typedef void (LX_GL_API_PTR PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void* data, GLenum usage);
LX_API extern PFNGLBUFFERDATAPROC lx_glBufferData;
#define glBufferData lx_glBufferData

typedef void (LX_GL_API_PTR PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void* data);
LX_API extern PFNGLBUFFERSUBDATAPROC lx_glBufferSubData;
#define glBufferSubData lx_glBufferSubData

typedef void (LX_GL_API_PTR PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint* buffers);
LX_API extern PFNGLDELETEBUFFERSPROC lx_glDeleteBuffers;
#define glDeleteBuffers lx_glDeleteBuffers

typedef void (LX_GL_API_PTR PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint* ids);
LX_API extern PFNGLDELETEQUERIESPROC lx_glDeleteQueries;
#define glDeleteQueries lx_glDeleteQueries

typedef void (LX_GL_API_PTR PFNGLENDQUERYPROC)(GLenum target);
LX_API extern PFNGLENDQUERYPROC lx_glEndQuery;
#define glEndQuery lx_glEndQuery

typedef void (LX_GL_API_PTR PFNGLGENBUFFERSPROC)(GLsizei n, GLuint* buffers);
LX_API extern PFNGLGENBUFFERSPROC lx_glGenBuffers;
#define glGenBuffers lx_glGenBuffers

typedef void (LX_GL_API_PTR PFNGLGENQUERIESPROC)(GLsizei n, GLuint* ids);
LX_API extern PFNGLGENQUERIESPROC lx_glGenQueries;
#define glGenQueries lx_glGenQueries

typedef void (LX_GL_API_PTR PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
LX_API extern PFNGLGETBUFFERPARAMETERIVPROC lx_glGetBufferParameteriv;
#define glGetBufferParameteriv lx_glGetBufferParameteriv

typedef void (LX_GL_API_PTR PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void ** params);
LX_API extern PFNGLGETBUFFERPOINTERVPROC lx_glGetBufferPointerv;
#define glGetBufferPointerv lx_glGetBufferPointerv

typedef void (LX_GL_API_PTR PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void* data);
LX_API extern PFNGLGETBUFFERSUBDATAPROC lx_glGetBufferSubData;
#define glGetBufferSubData lx_glGetBufferSubData

typedef void (LX_GL_API_PTR PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint* params);
LX_API extern PFNGLGETQUERYOBJECTIVPROC lx_glGetQueryObjectiv;
#define glGetQueryObjectiv lx_glGetQueryObjectiv

typedef void (LX_GL_API_PTR PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint* params);
LX_API extern PFNGLGETQUERYOBJECTUIVPROC lx_glGetQueryObjectuiv;
#define glGetQueryObjectuiv lx_glGetQueryObjectuiv

typedef void (LX_GL_API_PTR PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint* params);
LX_API extern PFNGLGETQUERYIVPROC lx_glGetQueryiv;
#define glGetQueryiv lx_glGetQueryiv

typedef GLboolean (LX_GL_API_PTR PFNGLISBUFFERPROC)(GLuint buffer);
LX_API extern PFNGLISBUFFERPROC lx_glIsBuffer;
#define glIsBuffer lx_glIsBuffer

typedef GLboolean (LX_GL_API_PTR PFNGLISQUERYPROC)(GLuint id);
LX_API extern PFNGLISQUERYPROC lx_glIsQuery;
#define glIsQuery lx_glIsQuery

typedef void* (LX_GL_API_PTR PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
LX_API extern PFNGLMAPBUFFERPROC lx_glMapBuffer;
#define glMapBuffer lx_glMapBuffer

typedef GLboolean (LX_GL_API_PTR PFNGLUNMAPBUFFERPROC)(GLenum target);
LX_API extern PFNGLUNMAPBUFFERPROC lx_glUnmapBuffer;
#define glUnmapBuffer lx_glUnmapBuffer

// opengl 2.0
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
LX_API extern PFNGLATTACHSHADERPROC lx_glAttachShader;
#define glAttachShader lx_glAttachShader

typedef void (LX_GL_API_PTR PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar* name);
LX_API extern PFNGLBINDATTRIBLOCATIONPROC lx_glBindAttribLocation;
#define glBindAttribLocation lx_glBindAttribLocation

typedef void (LX_GL_API_PTR PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);
LX_API extern PFNGLBLENDEQUATIONSEPARATEPROC lx_glBlendEquationSeparate;
#define glBlendEquationSeparate lx_glBlendEquationSeparate

typedef void (LX_GL_API_PTR PFNGLCOMPILESHADERPROC)(GLuint shader);
LX_API extern PFNGLCOMPILESHADERPROC lx_glCompileShader;
#define glCompileShader lx_glCompileShader

typedef GLuint (LX_GL_API_PTR PFNGLCREATEPROGRAMPROC)(void);
LX_API extern PFNGLCREATEPROGRAMPROC lx_glCreateProgram;
#define glCreateProgram lx_glCreateProgram

typedef GLuint (LX_GL_API_PTR PFNGLCREATESHADERPROC)(GLenum type);
LX_API extern PFNGLCREATESHADERPROC lx_glCreateShader;
#define glCreateShader lx_glCreateShader

typedef void (LX_GL_API_PTR PFNGLDELETEPROGRAMPROC)(GLuint program);
LX_API extern PFNGLDELETEPROGRAMPROC lx_glDeleteProgram;
#define glDeleteProgram lx_glDeleteProgram

typedef void (LX_GL_API_PTR PFNGLDELETESHADERPROC)(GLuint shader);
LX_API extern PFNGLDELETESHADERPROC lx_glDeleteShader;
#define glDeleteShader lx_glDeleteShader

typedef void (LX_GL_API_PTR PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
LX_API extern PFNGLDETACHSHADERPROC lx_glDetachShader;
#define glDetachShader lx_glDetachShader

typedef void (LX_GL_API_PTR PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
LX_API extern PFNGLDISABLEVERTEXATTRIBARRAYPROC lx_glDisableVertexAttribArray;
#define glDisableVertexAttribArray lx_glDisableVertexAttribArray

typedef void (LX_GL_API_PTR PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum* bufs);
LX_API extern PFNGLDRAWBUFFERSPROC lx_glDrawBuffers;
#define glDrawBuffers lx_glDrawBuffers

typedef void (LX_GL_API_PTR PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
LX_API extern PFNGLENABLEVERTEXATTRIBARRAYPROC lx_glEnableVertexAttribArray;
#define glEnableVertexAttribArray lx_glEnableVertexAttribArray

typedef void (LX_GL_API_PTR PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
LX_API extern PFNGLGETACTIVEATTRIBPROC lx_glGetActiveAttrib;
#define glGetActiveAttrib lx_glGetActiveAttrib

typedef void (LX_GL_API_PTR PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
LX_API extern PFNGLGETACTIVEUNIFORMPROC lx_glGetActiveUniform;
#define glGetActiveUniform lx_glGetActiveUniform

typedef void (LX_GL_API_PTR PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
LX_API extern PFNGLGETATTACHEDSHADERSPROC lx_glGetAttachedShaders;
#define glGetAttachedShaders lx_glGetAttachedShaders

typedef GLint (LX_GL_API_PTR PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar* name);
LX_API extern PFNGLGETATTRIBLOCATIONPROC lx_glGetAttribLocation;
#define glGetAttribLocation lx_glGetAttribLocation

typedef void (LX_GL_API_PTR PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
LX_API extern PFNGLGETPROGRAMINFOLOGPROC lx_glGetProgramInfoLog;
#define glGetProgramInfoLog lx_glGetProgramInfoLog

typedef void (LX_GL_API_PTR PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint* params);
LX_API extern PFNGLGETPROGRAMIVPROC lx_glGetProgramiv;
#define glGetProgramiv lx_glGetProgramiv

typedef void (LX_GL_API_PTR PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
LX_API extern PFNGLGETSHADERINFOLOGPROC lx_glGetShaderInfoLog;
#define glGetShaderInfoLog lx_glGetShaderInfoLog

typedef void (LX_GL_API_PTR PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
LX_API extern PFNGLGETSHADERSOURCEPROC lx_glGetShaderSource;
#define glGetShaderSource lx_glGetShaderSource

typedef void (LX_GL_API_PTR PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint* params);
LX_API extern PFNGLGETSHADERIVPROC lx_glGetShaderiv;
#define glGetShaderiv lx_glGetShaderiv

typedef GLint (LX_GL_API_PTR PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar* name);
LX_API extern PFNGLGETUNIFORMLOCATIONPROC lx_glGetUniformLocation;
#define glGetUniformLocation lx_glGetUniformLocation

typedef void (LX_GL_API_PTR PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat* params);
LX_API extern PFNGLGETUNIFORMFVPROC lx_glGetUniformfv;
#define glGetUniformfv lx_glGetUniformfv

typedef void (LX_GL_API_PTR PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint* params);
LX_API extern PFNGLGETUNIFORMIVPROC lx_glGetUniformiv;
#define glGetUniformiv lx_glGetUniformiv

typedef void (LX_GL_API_PTR PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void ** pointer);
LX_API extern PFNGLGETVERTEXATTRIBPOINTERVPROC lx_glGetVertexAttribPointerv;
#define glGetVertexAttribPointerv lx_glGetVertexAttribPointerv

typedef void (LX_GL_API_PTR PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble* params);
LX_API extern PFNGLGETVERTEXATTRIBDVPROC lx_glGetVertexAttribdv;
#define glGetVertexAttribdv lx_glGetVertexAttribdv

typedef void (LX_GL_API_PTR PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat* params);
LX_API extern PFNGLGETVERTEXATTRIBFVPROC lx_glGetVertexAttribfv;
#define glGetVertexAttribfv lx_glGetVertexAttribfv

typedef void (LX_GL_API_PTR PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint* params);
LX_API extern PFNGLGETVERTEXATTRIBIVPROC lx_glGetVertexAttribiv;
#define glGetVertexAttribiv lx_glGetVertexAttribiv

typedef GLboolean (LX_GL_API_PTR PFNGLISPROGRAMPROC)(GLuint program);
LX_API extern PFNGLISPROGRAMPROC lx_glIsProgram;
#define glIsProgram lx_glIsProgram

typedef GLboolean (LX_GL_API_PTR PFNGLISSHADERPROC)(GLuint shader);
LX_API extern PFNGLISSHADERPROC lx_glIsShader;
#define glIsShader lx_glIsShader

typedef void (LX_GL_API_PTR PFNGLLINKPROGRAMPROC)(GLuint program);
LX_API extern PFNGLLINKPROGRAMPROC lx_glLinkProgram;
#define glLinkProgram lx_glLinkProgram

typedef void (LX_GL_API_PTR PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const* string, const GLint* length);
LX_API extern PFNGLSHADERSOURCEPROC lx_glShaderSource;
#define glShaderSource lx_glShaderSource

typedef void (LX_GL_API_PTR PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);
LX_API extern PFNGLSTENCILFUNCSEPARATEPROC lx_glStencilFuncSeparate;
#define glStencilFuncSeparate lx_glStencilFuncSeparate

typedef void (LX_GL_API_PTR PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
LX_API extern PFNGLSTENCILMASKSEPARATEPROC lx_glStencilMaskSeparate;
#define glStencilMaskSeparate lx_glStencilMaskSeparate

typedef void (LX_GL_API_PTR PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
LX_API extern PFNGLSTENCILOPSEPARATEPROC lx_glStencilOpSeparate;
#define glStencilOpSeparate lx_glStencilOpSeparate

typedef void (LX_GL_API_PTR PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
LX_API extern PFNGLUNIFORM1FPROC lx_glUniform1f;
#define glUniform1f lx_glUniform1f

typedef void (LX_GL_API_PTR PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat* value);
LX_API extern PFNGLUNIFORM1FVPROC lx_glUniform1fv;
#define glUniform1fv lx_glUniform1fv

typedef void (LX_GL_API_PTR PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
LX_API extern PFNGLUNIFORM1IPROC lx_glUniform1i;
#define glUniform1i lx_glUniform1i

typedef void (LX_GL_API_PTR PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint* value);
LX_API extern PFNGLUNIFORM1IVPROC lx_glUniform1iv;
#define glUniform1iv lx_glUniform1iv

typedef void (LX_GL_API_PTR PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
LX_API extern PFNGLUNIFORM2FPROC lx_glUniform2f;
#define glUniform2f lx_glUniform2f

typedef void (LX_GL_API_PTR PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat* value);
LX_API extern PFNGLUNIFORM2FVPROC lx_glUniform2fv;
#define glUniform2fv lx_glUniform2fv

typedef void (LX_GL_API_PTR PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
LX_API extern PFNGLUNIFORM2IPROC lx_glUniform2i;
#define glUniform2i lx_glUniform2i

typedef void (LX_GL_API_PTR PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint* value);
LX_API extern PFNGLUNIFORM2IVPROC lx_glUniform2iv;
#define glUniform2iv lx_glUniform2iv

typedef void (LX_GL_API_PTR PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
LX_API extern PFNGLUNIFORM3FPROC lx_glUniform3f;
#define glUniform3f lx_glUniform3f

typedef void (LX_GL_API_PTR PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat* value);
LX_API extern PFNGLUNIFORM3FVPROC lx_glUniform3fv;
#define glUniform3fv lx_glUniform3fv

typedef void (LX_GL_API_PTR PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);
LX_API extern PFNGLUNIFORM3IPROC lx_glUniform3i;
#define glUniform3i lx_glUniform3i

typedef void (LX_GL_API_PTR PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint* value);
LX_API extern PFNGLUNIFORM3IVPROC lx_glUniform3iv;
#define glUniform3iv lx_glUniform3iv

typedef void (LX_GL_API_PTR PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
LX_API extern PFNGLUNIFORM4FPROC lx_glUniform4f;
#define glUniform4f lx_glUniform4f

typedef void (LX_GL_API_PTR PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat* value);
LX_API extern PFNGLUNIFORM4FVPROC lx_glUniform4fv;
#define glUniform4fv lx_glUniform4fv

typedef void (LX_GL_API_PTR PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
LX_API extern PFNGLUNIFORM4IPROC lx_glUniform4i;
#define glUniform4i lx_glUniform4i

typedef void (LX_GL_API_PTR PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint* value);
LX_API extern PFNGLUNIFORM4IVPROC lx_glUniform4iv;
#define glUniform4iv lx_glUniform4iv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLUNIFORMMATRIX2FVPROC lx_glUniformMatrix2fv;
#define glUniformMatrix2fv lx_glUniformMatrix2fv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLUNIFORMMATRIX3FVPROC lx_glUniformMatrix3fv;
#define glUniformMatrix3fv lx_glUniformMatrix3fv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLUNIFORMMATRIX4FVPROC lx_glUniformMatrix4fv;
#define glUniformMatrix4fv lx_glUniformMatrix4fv

typedef void (LX_GL_API_PTR PFNGLUSEPROGRAMPROC)(GLuint program);
LX_API extern PFNGLUSEPROGRAMPROC lx_glUseProgram;
#define glUseProgram lx_glUseProgram

typedef void (LX_GL_API_PTR PFNGLVALIDATEPROGRAMPROC)(GLuint program);
LX_API extern PFNGLVALIDATEPROGRAMPROC lx_glValidateProgram;
#define glValidateProgram lx_glValidateProgram

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);
LX_API extern PFNGLVERTEXATTRIB1DPROC lx_glVertexAttrib1d;
#define glVertexAttrib1d lx_glVertexAttrib1d

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble* v);
LX_API extern PFNGLVERTEXATTRIB1DVPROC lx_glVertexAttrib1dv;
#define glVertexAttrib1dv lx_glVertexAttrib1dv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
LX_API extern PFNGLVERTEXATTRIB1FPROC lx_glVertexAttrib1f;
#define glVertexAttrib1f lx_glVertexAttrib1f

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat* v);
LX_API extern PFNGLVERTEXATTRIB1FVPROC lx_glVertexAttrib1fv;
#define glVertexAttrib1fv lx_glVertexAttrib1fv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);
LX_API extern PFNGLVERTEXATTRIB1SPROC lx_glVertexAttrib1s;
#define glVertexAttrib1s lx_glVertexAttrib1s

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort* v);
LX_API extern PFNGLVERTEXATTRIB1SVPROC lx_glVertexAttrib1sv;
#define glVertexAttrib1sv lx_glVertexAttrib1sv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);
LX_API extern PFNGLVERTEXATTRIB2DPROC lx_glVertexAttrib2d;
#define glVertexAttrib2d lx_glVertexAttrib2d

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble* v);
LX_API extern PFNGLVERTEXATTRIB2DVPROC lx_glVertexAttrib2dv;
#define glVertexAttrib2dv lx_glVertexAttrib2dv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
LX_API extern PFNGLVERTEXATTRIB2FPROC lx_glVertexAttrib2f;
#define glVertexAttrib2f lx_glVertexAttrib2f

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat* v);
LX_API extern PFNGLVERTEXATTRIB2FVPROC lx_glVertexAttrib2fv;
#define glVertexAttrib2fv lx_glVertexAttrib2fv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);
LX_API extern PFNGLVERTEXATTRIB2SPROC lx_glVertexAttrib2s;
#define glVertexAttrib2s lx_glVertexAttrib2s

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort* v);
LX_API extern PFNGLVERTEXATTRIB2SVPROC lx_glVertexAttrib2sv;
#define glVertexAttrib2sv lx_glVertexAttrib2sv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
LX_API extern PFNGLVERTEXATTRIB3DPROC lx_glVertexAttrib3d;
#define glVertexAttrib3d lx_glVertexAttrib3d

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble* v);
LX_API extern PFNGLVERTEXATTRIB3DVPROC lx_glVertexAttrib3dv;
#define glVertexAttrib3dv lx_glVertexAttrib3dv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
LX_API extern PFNGLVERTEXATTRIB3FPROC lx_glVertexAttrib3f;
#define glVertexAttrib3f lx_glVertexAttrib3f

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat* v);
LX_API extern PFNGLVERTEXATTRIB3FVPROC lx_glVertexAttrib3fv;
#define glVertexAttrib3fv lx_glVertexAttrib3fv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
LX_API extern PFNGLVERTEXATTRIB3SPROC lx_glVertexAttrib3s;
#define glVertexAttrib3s lx_glVertexAttrib3s

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort* v);
LX_API extern PFNGLVERTEXATTRIB3SVPROC lx_glVertexAttrib3sv;
#define glVertexAttrib3sv lx_glVertexAttrib3sv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte* v);
LX_API extern PFNGLVERTEXATTRIB4NBVPROC lx_glVertexAttrib4Nbv;
#define glVertexAttrib4Nbv lx_glVertexAttrib4Nbv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint* v);
LX_API extern PFNGLVERTEXATTRIB4NIVPROC lx_glVertexAttrib4Niv;
#define glVertexAttrib4Niv lx_glVertexAttrib4Niv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort* v);
LX_API extern PFNGLVERTEXATTRIB4NSVPROC lx_glVertexAttrib4Nsv;
#define glVertexAttrib4Nsv lx_glVertexAttrib4Nsv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
LX_API extern PFNGLVERTEXATTRIB4NUBPROC lx_glVertexAttrib4Nub;
#define glVertexAttrib4Nub lx_glVertexAttrib4Nub

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte* v);
LX_API extern PFNGLVERTEXATTRIB4NUBVPROC lx_glVertexAttrib4Nubv;
#define glVertexAttrib4Nubv lx_glVertexAttrib4Nubv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint* v);
LX_API extern PFNGLVERTEXATTRIB4NUIVPROC lx_glVertexAttrib4Nuiv;
#define glVertexAttrib4Nuiv lx_glVertexAttrib4Nuiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort* v);
LX_API extern PFNGLVERTEXATTRIB4NUSVPROC lx_glVertexAttrib4Nusv;
#define glVertexAttrib4Nusv lx_glVertexAttrib4Nusv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte* v);
LX_API extern PFNGLVERTEXATTRIB4BVPROC lx_glVertexAttrib4bv;
#define glVertexAttrib4bv lx_glVertexAttrib4bv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
LX_API extern PFNGLVERTEXATTRIB4DPROC lx_glVertexAttrib4d;
#define glVertexAttrib4d lx_glVertexAttrib4d

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble* v);
LX_API extern PFNGLVERTEXATTRIB4DVPROC lx_glVertexAttrib4dv;
#define glVertexAttrib4dv lx_glVertexAttrib4dv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
LX_API extern PFNGLVERTEXATTRIB4FPROC lx_glVertexAttrib4f;
#define glVertexAttrib4f lx_glVertexAttrib4f

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat* v);
LX_API extern PFNGLVERTEXATTRIB4FVPROC lx_glVertexAttrib4fv;
#define glVertexAttrib4fv lx_glVertexAttrib4fv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint* v);
LX_API extern PFNGLVERTEXATTRIB4IVPROC lx_glVertexAttrib4iv;
#define glVertexAttrib4iv lx_glVertexAttrib4iv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
LX_API extern PFNGLVERTEXATTRIB4SPROC lx_glVertexAttrib4s;
#define glVertexAttrib4s lx_glVertexAttrib4s

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort* v);
LX_API extern PFNGLVERTEXATTRIB4SVPROC lx_glVertexAttrib4sv;
#define glVertexAttrib4sv lx_glVertexAttrib4sv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte* v);
LX_API extern PFNGLVERTEXATTRIB4UBVPROC lx_glVertexAttrib4ubv;
#define glVertexAttrib4ubv lx_glVertexAttrib4ubv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint* v);
LX_API extern PFNGLVERTEXATTRIB4UIVPROC lx_glVertexAttrib4uiv;
#define glVertexAttrib4uiv lx_glVertexAttrib4uiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort* v);
LX_API extern PFNGLVERTEXATTRIB4USVPROC lx_glVertexAttrib4usv;
#define glVertexAttrib4usv lx_glVertexAttrib4usv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void* pointer);
LX_API extern PFNGLVERTEXATTRIBPOINTERPROC lx_glVertexAttribPointer;
#define glVertexAttribPointer lx_glVertexAttribPointer

// opengl 2.1
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLUNIFORMMATRIX2X3FVPROC lx_glUniformMatrix2x3fv;
#define glUniformMatrix2x3fv lx_glUniformMatrix2x3fv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLUNIFORMMATRIX2X4FVPROC lx_glUniformMatrix2x4fv;
#define glUniformMatrix2x4fv lx_glUniformMatrix2x4fv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLUNIFORMMATRIX3X2FVPROC lx_glUniformMatrix3x2fv;
#define glUniformMatrix3x2fv lx_glUniformMatrix3x2fv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLUNIFORMMATRIX3X4FVPROC lx_glUniformMatrix3x4fv;
#define glUniformMatrix3x4fv lx_glUniformMatrix3x4fv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLUNIFORMMATRIX4X2FVPROC lx_glUniformMatrix4x2fv;
#define glUniformMatrix4x2fv lx_glUniformMatrix4x2fv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLUNIFORMMATRIX4X3FVPROC lx_glUniformMatrix4x3fv;
#define glUniformMatrix4x3fv lx_glUniformMatrix4x3fv

// opengl 3.0
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);
LX_API extern PFNGLBEGINCONDITIONALRENDERPROC lx_glBeginConditionalRender;
#define glBeginConditionalRender lx_glBeginConditionalRender

typedef void (LX_GL_API_PTR PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
LX_API extern PFNGLBEGINTRANSFORMFEEDBACKPROC lx_glBeginTransformFeedback;
#define glBeginTransformFeedback lx_glBeginTransformFeedback

typedef void (LX_GL_API_PTR PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);
LX_API extern PFNGLBINDBUFFERBASEPROC lx_glBindBufferBase;
#define glBindBufferBase lx_glBindBufferBase

typedef void (LX_GL_API_PTR PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
LX_API extern PFNGLBINDBUFFERRANGEPROC lx_glBindBufferRange;
#define glBindBufferRange lx_glBindBufferRange

typedef void (LX_GL_API_PTR PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar* name);
LX_API extern PFNGLBINDFRAGDATALOCATIONPROC lx_glBindFragDataLocation;
#define glBindFragDataLocation lx_glBindFragDataLocation

typedef void (LX_GL_API_PTR PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
LX_API extern PFNGLBINDFRAMEBUFFERPROC lx_glBindFramebuffer;
#define glBindFramebuffer lx_glBindFramebuffer

typedef void (LX_GL_API_PTR PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
LX_API extern PFNGLBINDRENDERBUFFERPROC lx_glBindRenderbuffer;
#define glBindRenderbuffer lx_glBindRenderbuffer

typedef void (LX_GL_API_PTR PFNGLBINDVERTEXARRAYPROC)(GLuint array);
LX_API extern PFNGLBINDVERTEXARRAYPROC lx_glBindVertexArray;
#define glBindVertexArray lx_glBindVertexArray

typedef void (LX_GL_API_PTR PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
LX_API extern PFNGLBLITFRAMEBUFFERPROC lx_glBlitFramebuffer;
#define glBlitFramebuffer lx_glBlitFramebuffer

typedef GLenum (LX_GL_API_PTR PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
LX_API extern PFNGLCHECKFRAMEBUFFERSTATUSPROC lx_glCheckFramebufferStatus;
#define glCheckFramebufferStatus lx_glCheckFramebufferStatus

typedef void (LX_GL_API_PTR PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);
LX_API extern PFNGLCLAMPCOLORPROC lx_glClampColor;
#define glClampColor lx_glClampColor

typedef void (LX_GL_API_PTR PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
LX_API extern PFNGLCLEARBUFFERFIPROC lx_glClearBufferfi;
#define glClearBufferfi lx_glClearBufferfi

typedef void (LX_GL_API_PTR PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat* value);
LX_API extern PFNGLCLEARBUFFERFVPROC lx_glClearBufferfv;
#define glClearBufferfv lx_glClearBufferfv

typedef void (LX_GL_API_PTR PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint* value);
LX_API extern PFNGLCLEARBUFFERIVPROC lx_glClearBufferiv;
#define glClearBufferiv lx_glClearBufferiv

typedef void (LX_GL_API_PTR PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint* value);
LX_API extern PFNGLCLEARBUFFERUIVPROC lx_glClearBufferuiv;
#define glClearBufferuiv lx_glClearBufferuiv

typedef void (LX_GL_API_PTR PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
LX_API extern PFNGLCOLORMASKIPROC lx_glColorMaski;
#define glColorMaski lx_glColorMaski

typedef void (LX_GL_API_PTR PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint* framebuffers);
LX_API extern PFNGLDELETEFRAMEBUFFERSPROC lx_glDeleteFramebuffers;
#define glDeleteFramebuffers lx_glDeleteFramebuffers

typedef void (LX_GL_API_PTR PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint* renderbuffers);
LX_API extern PFNGLDELETERENDERBUFFERSPROC lx_glDeleteRenderbuffers;
#define glDeleteRenderbuffers lx_glDeleteRenderbuffers

typedef void (LX_GL_API_PTR PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint* arrays);
LX_API extern PFNGLDELETEVERTEXARRAYSPROC lx_glDeleteVertexArrays;
#define glDeleteVertexArrays lx_glDeleteVertexArrays

typedef void (LX_GL_API_PTR PFNGLDISABLEIPROC)(GLenum target, GLuint index);
LX_API extern PFNGLDISABLEIPROC lx_glDisablei;
#define glDisablei lx_glDisablei

typedef void (LX_GL_API_PTR PFNGLENABLEIPROC)(GLenum target, GLuint index);
LX_API extern PFNGLENABLEIPROC lx_glEnablei;
#define glEnablei lx_glEnablei

typedef void (LX_GL_API_PTR PFNGLENDCONDITIONALRENDERPROC)(void);
LX_API extern PFNGLENDCONDITIONALRENDERPROC lx_glEndConditionalRender;
#define glEndConditionalRender lx_glEndConditionalRender

typedef void (LX_GL_API_PTR PFNGLENDTRANSFORMFEEDBACKPROC)(void);
LX_API extern PFNGLENDTRANSFORMFEEDBACKPROC lx_glEndTransformFeedback;
#define glEndTransformFeedback lx_glEndTransformFeedback

typedef void (LX_GL_API_PTR PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
LX_API extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC lx_glFlushMappedBufferRange;
#define glFlushMappedBufferRange lx_glFlushMappedBufferRange

typedef void (LX_GL_API_PTR PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
LX_API extern PFNGLFRAMEBUFFERRENDERBUFFERPROC lx_glFramebufferRenderbuffer;
#define glFramebufferRenderbuffer lx_glFramebufferRenderbuffer

typedef void (LX_GL_API_PTR PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
LX_API extern PFNGLFRAMEBUFFERTEXTURE1DPROC lx_glFramebufferTexture1D;
#define glFramebufferTexture1D lx_glFramebufferTexture1D

typedef void (LX_GL_API_PTR PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
LX_API extern PFNGLFRAMEBUFFERTEXTURE2DPROC lx_glFramebufferTexture2D;
#define glFramebufferTexture2D lx_glFramebufferTexture2D

typedef void (LX_GL_API_PTR PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
LX_API extern PFNGLFRAMEBUFFERTEXTURE3DPROC lx_glFramebufferTexture3D;
#define glFramebufferTexture3D lx_glFramebufferTexture3D

typedef void (LX_GL_API_PTR PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
LX_API extern PFNGLFRAMEBUFFERTEXTURELAYERPROC lx_glFramebufferTextureLayer;
#define glFramebufferTextureLayer lx_glFramebufferTextureLayer

typedef void (LX_GL_API_PTR PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint* framebuffers);
LX_API extern PFNGLGENFRAMEBUFFERSPROC lx_glGenFramebuffers;
#define glGenFramebuffers lx_glGenFramebuffers

typedef void (LX_GL_API_PTR PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint* renderbuffers);
LX_API extern PFNGLGENRENDERBUFFERSPROC lx_glGenRenderbuffers;
#define glGenRenderbuffers lx_glGenRenderbuffers

typedef void (LX_GL_API_PTR PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint* arrays);
LX_API extern PFNGLGENVERTEXARRAYSPROC lx_glGenVertexArrays;
#define glGenVertexArrays lx_glGenVertexArrays

typedef void (LX_GL_API_PTR PFNGLGENERATEMIPMAPPROC)(GLenum target);
LX_API extern PFNGLGENERATEMIPMAPPROC lx_glGenerateMipmap;
#define glGenerateMipmap lx_glGenerateMipmap

typedef void (LX_GL_API_PTR PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean* data);
LX_API extern PFNGLGETBOOLEANI_VPROC lx_glGetBooleani_v;
#define glGetBooleani_v lx_glGetBooleani_v

typedef GLint (LX_GL_API_PTR PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar* name);
LX_API extern PFNGLGETFRAGDATALOCATIONPROC lx_glGetFragDataLocation;
#define glGetFragDataLocation lx_glGetFragDataLocation

typedef void (LX_GL_API_PTR PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint* params);
LX_API extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC lx_glGetFramebufferAttachmentParameteriv;
#define glGetFramebufferAttachmentParameteriv lx_glGetFramebufferAttachmentParameteriv

typedef void (LX_GL_API_PTR PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint* data);
LX_API extern PFNGLGETINTEGERI_VPROC lx_glGetIntegeri_v;
#define glGetIntegeri_v lx_glGetIntegeri_v

typedef void (LX_GL_API_PTR PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
LX_API extern PFNGLGETRENDERBUFFERPARAMETERIVPROC lx_glGetRenderbufferParameteriv;
#define glGetRenderbufferParameteriv lx_glGetRenderbufferParameteriv

typedef GLubyte* (LX_GL_API_PTR PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);
LX_API extern PFNGLGETSTRINGIPROC lx_glGetStringi;
#define glGetStringi lx_glGetStringi

typedef void (LX_GL_API_PTR PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint* params);
LX_API extern PFNGLGETTEXPARAMETERIIVPROC lx_glGetTexParameterIiv;
#define glGetTexParameterIiv lx_glGetTexParameterIiv

typedef void (LX_GL_API_PTR PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint* params);
LX_API extern PFNGLGETTEXPARAMETERIUIVPROC lx_glGetTexParameterIuiv;
#define glGetTexParameterIuiv lx_glGetTexParameterIuiv

typedef void (LX_GL_API_PTR PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name);
LX_API extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC lx_glGetTransformFeedbackVarying;
#define glGetTransformFeedbackVarying lx_glGetTransformFeedbackVarying

typedef void (LX_GL_API_PTR PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint* params);
LX_API extern PFNGLGETUNIFORMUIVPROC lx_glGetUniformuiv;
#define glGetUniformuiv lx_glGetUniformuiv

typedef void (LX_GL_API_PTR PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint* params);
LX_API extern PFNGLGETVERTEXATTRIBIIVPROC lx_glGetVertexAttribIiv;
#define glGetVertexAttribIiv lx_glGetVertexAttribIiv

typedef void (LX_GL_API_PTR PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint* params);
LX_API extern PFNGLGETVERTEXATTRIBIUIVPROC lx_glGetVertexAttribIuiv;
#define glGetVertexAttribIuiv lx_glGetVertexAttribIuiv

typedef GLboolean (LX_GL_API_PTR PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
LX_API extern PFNGLISENABLEDIPROC lx_glIsEnabledi;
#define glIsEnabledi lx_glIsEnabledi

typedef GLboolean (LX_GL_API_PTR PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
LX_API extern PFNGLISFRAMEBUFFERPROC lx_glIsFramebuffer;
#define glIsFramebuffer lx_glIsFramebuffer

typedef GLboolean (LX_GL_API_PTR PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
LX_API extern PFNGLISRENDERBUFFERPROC lx_glIsRenderbuffer;
#define glIsRenderbuffer lx_glIsRenderbuffer

typedef GLboolean (LX_GL_API_PTR PFNGLISVERTEXARRAYPROC)(GLuint array);
LX_API extern PFNGLISVERTEXARRAYPROC lx_glIsVertexArray;
#define glIsVertexArray lx_glIsVertexArray

typedef void* (LX_GL_API_PTR PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
LX_API extern PFNGLMAPBUFFERRANGEPROC lx_glMapBufferRange;
#define glMapBufferRange lx_glMapBufferRange

typedef void (LX_GL_API_PTR PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
LX_API extern PFNGLRENDERBUFFERSTORAGEPROC lx_glRenderbufferStorage;
#define glRenderbufferStorage lx_glRenderbufferStorage

typedef void (LX_GL_API_PTR PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
LX_API extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC lx_glRenderbufferStorageMultisample;
#define glRenderbufferStorageMultisample lx_glRenderbufferStorageMultisample

typedef void (LX_GL_API_PTR PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint* params);
LX_API extern PFNGLTEXPARAMETERIIVPROC lx_glTexParameterIiv;
#define glTexParameterIiv lx_glTexParameterIiv

typedef void (LX_GL_API_PTR PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint* params);
LX_API extern PFNGLTEXPARAMETERIUIVPROC lx_glTexParameterIuiv;
#define glTexParameterIuiv lx_glTexParameterIuiv

typedef void (LX_GL_API_PTR PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
LX_API extern PFNGLTRANSFORMFEEDBACKVARYINGSPROC lx_glTransformFeedbackVaryings;
#define glTransformFeedbackVaryings lx_glTransformFeedbackVaryings

typedef void (LX_GL_API_PTR PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
LX_API extern PFNGLUNIFORM1UIPROC lx_glUniform1ui;
#define glUniform1ui lx_glUniform1ui

typedef void (LX_GL_API_PTR PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint* value);
LX_API extern PFNGLUNIFORM1UIVPROC lx_glUniform1uiv;
#define glUniform1uiv lx_glUniform1uiv

typedef void (LX_GL_API_PTR PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
LX_API extern PFNGLUNIFORM2UIPROC lx_glUniform2ui;
#define glUniform2ui lx_glUniform2ui

typedef void (LX_GL_API_PTR PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint* value);
LX_API extern PFNGLUNIFORM2UIVPROC lx_glUniform2uiv;
#define glUniform2uiv lx_glUniform2uiv

typedef void (LX_GL_API_PTR PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
LX_API extern PFNGLUNIFORM3UIPROC lx_glUniform3ui;
#define glUniform3ui lx_glUniform3ui

typedef void (LX_GL_API_PTR PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint* value);
LX_API extern PFNGLUNIFORM3UIVPROC lx_glUniform3uiv;
#define glUniform3uiv lx_glUniform3uiv

typedef void (LX_GL_API_PTR PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
LX_API extern PFNGLUNIFORM4UIPROC lx_glUniform4ui;
#define glUniform4ui lx_glUniform4ui

typedef void (LX_GL_API_PTR PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint* value);
LX_API extern PFNGLUNIFORM4UIVPROC lx_glUniform4uiv;
#define glUniform4uiv lx_glUniform4uiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);
LX_API extern PFNGLVERTEXATTRIBI1IPROC lx_glVertexAttribI1i;
#define glVertexAttribI1i lx_glVertexAttribI1i

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint* v);
LX_API extern PFNGLVERTEXATTRIBI1IVPROC lx_glVertexAttribI1iv;
#define glVertexAttribI1iv lx_glVertexAttribI1iv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);
LX_API extern PFNGLVERTEXATTRIBI1UIPROC lx_glVertexAttribI1ui;
#define glVertexAttribI1ui lx_glVertexAttribI1ui

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint* v);
LX_API extern PFNGLVERTEXATTRIBI1UIVPROC lx_glVertexAttribI1uiv;
#define glVertexAttribI1uiv lx_glVertexAttribI1uiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);
LX_API extern PFNGLVERTEXATTRIBI2IPROC lx_glVertexAttribI2i;
#define glVertexAttribI2i lx_glVertexAttribI2i

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint* v);
LX_API extern PFNGLVERTEXATTRIBI2IVPROC lx_glVertexAttribI2iv;
#define glVertexAttribI2iv lx_glVertexAttribI2iv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);
LX_API extern PFNGLVERTEXATTRIBI2UIPROC lx_glVertexAttribI2ui;
#define glVertexAttribI2ui lx_glVertexAttribI2ui

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint* v);
LX_API extern PFNGLVERTEXATTRIBI2UIVPROC lx_glVertexAttribI2uiv;
#define glVertexAttribI2uiv lx_glVertexAttribI2uiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);
LX_API extern PFNGLVERTEXATTRIBI3IPROC lx_glVertexAttribI3i;
#define glVertexAttribI3i lx_glVertexAttribI3i

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint* v);
LX_API extern PFNGLVERTEXATTRIBI3IVPROC lx_glVertexAttribI3iv;
#define glVertexAttribI3iv lx_glVertexAttribI3iv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
LX_API extern PFNGLVERTEXATTRIBI3UIPROC lx_glVertexAttribI3ui;
#define glVertexAttribI3ui lx_glVertexAttribI3ui

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint* v);
LX_API extern PFNGLVERTEXATTRIBI3UIVPROC lx_glVertexAttribI3uiv;
#define glVertexAttribI3uiv lx_glVertexAttribI3uiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte* v);
LX_API extern PFNGLVERTEXATTRIBI4BVPROC lx_glVertexAttribI4bv;
#define glVertexAttribI4bv lx_glVertexAttribI4bv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
LX_API extern PFNGLVERTEXATTRIBI4IPROC lx_glVertexAttribI4i;
#define glVertexAttribI4i lx_glVertexAttribI4i

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint* v);
LX_API extern PFNGLVERTEXATTRIBI4IVPROC lx_glVertexAttribI4iv;
#define glVertexAttribI4iv lx_glVertexAttribI4iv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort* v);
LX_API extern PFNGLVERTEXATTRIBI4SVPROC lx_glVertexAttribI4sv;
#define glVertexAttribI4sv lx_glVertexAttribI4sv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte* v);
LX_API extern PFNGLVERTEXATTRIBI4UBVPROC lx_glVertexAttribI4ubv;
#define glVertexAttribI4ubv lx_glVertexAttribI4ubv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
LX_API extern PFNGLVERTEXATTRIBI4UIPROC lx_glVertexAttribI4ui;
#define glVertexAttribI4ui lx_glVertexAttribI4ui

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint* v);
LX_API extern PFNGLVERTEXATTRIBI4UIVPROC lx_glVertexAttribI4uiv;
#define glVertexAttribI4uiv lx_glVertexAttribI4uiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort* v);
LX_API extern PFNGLVERTEXATTRIBI4USVPROC lx_glVertexAttribI4usv;
#define glVertexAttribI4usv lx_glVertexAttribI4usv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer);
LX_API extern PFNGLVERTEXATTRIBIPOINTERPROC lx_glVertexAttribIPointer;
#define glVertexAttribIPointer lx_glVertexAttribIPointer

// opengl 3.1
// ----------------------------------------------------------------

LX_API extern PFNGLBINDBUFFERBASEPROC lx_glBindBufferBase;
#define glBindBufferBase lx_glBindBufferBase
LX_API extern PFNGLBINDBUFFERRANGEPROC lx_glBindBufferRange;
#define glBindBufferRange lx_glBindBufferRange

typedef void (LX_GL_API_PTR PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
LX_API extern PFNGLCOPYBUFFERSUBDATAPROC lx_glCopyBufferSubData;
#define glCopyBufferSubData lx_glCopyBufferSubData

typedef void (LX_GL_API_PTR PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
LX_API extern PFNGLDRAWARRAYSINSTANCEDPROC lx_glDrawArraysInstanced;
#define glDrawArraysInstanced lx_glDrawArraysInstanced

typedef void (LX_GL_API_PTR PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount);
LX_API extern PFNGLDRAWELEMENTSINSTANCEDPROC lx_glDrawElementsInstanced;
#define glDrawElementsInstanced lx_glDrawElementsInstanced

typedef void (LX_GL_API_PTR PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
LX_API extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC lx_glGetActiveUniformBlockName;
#define glGetActiveUniformBlockName lx_glGetActiveUniformBlockName

typedef void (LX_GL_API_PTR PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
LX_API extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC lx_glGetActiveUniformBlockiv;
#define glGetActiveUniformBlockiv lx_glGetActiveUniformBlockiv

typedef void (LX_GL_API_PTR PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
LX_API extern PFNGLGETACTIVEUNIFORMNAMEPROC lx_glGetActiveUniformName;
#define glGetActiveUniformName lx_glGetActiveUniformName

typedef void (LX_GL_API_PTR PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
LX_API extern PFNGLGETACTIVEUNIFORMSIVPROC lx_glGetActiveUniformsiv;
#define glGetActiveUniformsiv lx_glGetActiveUniformsiv
LX_API extern PFNGLGETINTEGERI_VPROC lx_glGetIntegeri_v;
#define glGetIntegeri_v lx_glGetIntegeri_v

typedef GLuint (LX_GL_API_PTR PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar* uniformBlockName);
LX_API extern PFNGLGETUNIFORMBLOCKINDEXPROC lx_glGetUniformBlockIndex;
#define glGetUniformBlockIndex lx_glGetUniformBlockIndex

typedef void (LX_GL_API_PTR PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint* uniformIndices);
LX_API extern PFNGLGETUNIFORMINDICESPROC lx_glGetUniformIndices;
#define glGetUniformIndices lx_glGetUniformIndices

typedef void (LX_GL_API_PTR PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);
LX_API extern PFNGLPRIMITIVERESTARTINDEXPROC lx_glPrimitiveRestartIndex;
#define glPrimitiveRestartIndex lx_glPrimitiveRestartIndex

typedef void (LX_GL_API_PTR PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);
LX_API extern PFNGLTEXBUFFERPROC lx_glTexBuffer;
#define glTexBuffer lx_glTexBuffer

typedef void (LX_GL_API_PTR PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
LX_API extern PFNGLUNIFORMBLOCKBINDINGPROC lx_glUniformBlockBinding;
#define glUniformBlockBinding lx_glUniformBlockBinding

// opengl 3.2
// ----------------------------------------------------------------

typedef GLenum (LX_GL_API_PTR PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
LX_API extern PFNGLCLIENTWAITSYNCPROC lx_glClientWaitSync;
#define glClientWaitSync lx_glClientWaitSync

typedef void (LX_GL_API_PTR PFNGLDELETESYNCPROC)(GLsync sync);
LX_API extern PFNGLDELETESYNCPROC lx_glDeleteSync;
#define glDeleteSync lx_glDeleteSync

typedef void (LX_GL_API_PTR PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices, GLint basevertex);
LX_API extern PFNGLDRAWELEMENTSBASEVERTEXPROC lx_glDrawElementsBaseVertex;
#define glDrawElementsBaseVertex lx_glDrawElementsBaseVertex

typedef void (LX_GL_API_PTR PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount, GLint basevertex);
LX_API extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC lx_glDrawElementsInstancedBaseVertex;
#define glDrawElementsInstancedBaseVertex lx_glDrawElementsInstancedBaseVertex

typedef void (LX_GL_API_PTR PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void* indices, GLint basevertex);
LX_API extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC lx_glDrawRangeElementsBaseVertex;
#define glDrawRangeElementsBaseVertex lx_glDrawRangeElementsBaseVertex

typedef GLsync (LX_GL_API_PTR PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
LX_API extern PFNGLFENCESYNCPROC lx_glFenceSync;
#define glFenceSync lx_glFenceSync

typedef void (LX_GL_API_PTR PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
LX_API extern PFNGLFRAMEBUFFERTEXTUREPROC lx_glFramebufferTexture;
#define glFramebufferTexture lx_glFramebufferTexture

typedef void (LX_GL_API_PTR PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64* params);
LX_API extern PFNGLGETBUFFERPARAMETERI64VPROC lx_glGetBufferParameteri64v;
#define glGetBufferParameteri64v lx_glGetBufferParameteri64v

typedef void (LX_GL_API_PTR PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64* data);
LX_API extern PFNGLGETINTEGER64I_VPROC lx_glGetInteger64i_v;
#define glGetInteger64i_v lx_glGetInteger64i_v

typedef void (LX_GL_API_PTR PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64* data);
LX_API extern PFNGLGETINTEGER64VPROC lx_glGetInteger64v;
#define glGetInteger64v lx_glGetInteger64v

typedef void (LX_GL_API_PTR PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat* val);
LX_API extern PFNGLGETMULTISAMPLEFVPROC lx_glGetMultisamplefv;
#define glGetMultisamplefv lx_glGetMultisamplefv

typedef void (LX_GL_API_PTR PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei* length, GLint* values);
LX_API extern PFNGLGETSYNCIVPROC lx_glGetSynciv;
#define glGetSynciv lx_glGetSynciv

typedef GLboolean (LX_GL_API_PTR PFNGLISSYNCPROC)(GLsync sync);
LX_API extern PFNGLISSYNCPROC lx_glIsSync;
#define glIsSync lx_glIsSync

typedef void (LX_GL_API_PTR PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei* count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint* basevertex);
LX_API extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC lx_glMultiDrawElementsBaseVertex;
#define glMultiDrawElementsBaseVertex lx_glMultiDrawElementsBaseVertex

typedef void (LX_GL_API_PTR PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
LX_API extern PFNGLPROVOKINGVERTEXPROC lx_glProvokingVertex;
#define glProvokingVertex lx_glProvokingVertex

typedef void (LX_GL_API_PTR PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);
LX_API extern PFNGLSAMPLEMASKIPROC lx_glSampleMaski;
#define glSampleMaski lx_glSampleMaski

typedef void (LX_GL_API_PTR PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
LX_API extern PFNGLTEXIMAGE2DMULTISAMPLEPROC lx_glTexImage2DMultisample;
#define glTexImage2DMultisample lx_glTexImage2DMultisample

typedef void (LX_GL_API_PTR PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
LX_API extern PFNGLTEXIMAGE3DMULTISAMPLEPROC lx_glTexImage3DMultisample;
#define glTexImage3DMultisample lx_glTexImage3DMultisample

typedef void (LX_GL_API_PTR PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
LX_API extern PFNGLWAITSYNCPROC lx_glWaitSync;
#define glWaitSync lx_glWaitSync

// opengl 3.3
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar* name);
LX_API extern PFNGLBINDFRAGDATALOCATIONINDEXEDPROC lx_glBindFragDataLocationIndexed;
#define glBindFragDataLocationIndexed lx_glBindFragDataLocationIndexed

typedef void (LX_GL_API_PTR PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
LX_API extern PFNGLBINDSAMPLERPROC lx_glBindSampler;
#define glBindSampler lx_glBindSampler

typedef void (LX_GL_API_PTR PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint* samplers);
LX_API extern PFNGLDELETESAMPLERSPROC lx_glDeleteSamplers;
#define glDeleteSamplers lx_glDeleteSamplers

typedef void (LX_GL_API_PTR PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint* samplers);
LX_API extern PFNGLGENSAMPLERSPROC lx_glGenSamplers;
#define glGenSamplers lx_glGenSamplers

typedef GLint (LX_GL_API_PTR PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar* name);
LX_API extern PFNGLGETFRAGDATAINDEXPROC lx_glGetFragDataIndex;
#define glGetFragDataIndex lx_glGetFragDataIndex

typedef void (LX_GL_API_PTR PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64* params);
LX_API extern PFNGLGETQUERYOBJECTI64VPROC lx_glGetQueryObjecti64v;
#define glGetQueryObjecti64v lx_glGetQueryObjecti64v

typedef void (LX_GL_API_PTR PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64* params);
LX_API extern PFNGLGETQUERYOBJECTUI64VPROC lx_glGetQueryObjectui64v;
#define glGetQueryObjectui64v lx_glGetQueryObjectui64v

typedef void (LX_GL_API_PTR PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint* params);
LX_API extern PFNGLGETSAMPLERPARAMETERIIVPROC lx_glGetSamplerParameterIiv;
#define glGetSamplerParameterIiv lx_glGetSamplerParameterIiv

typedef void (LX_GL_API_PTR PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint* params);
LX_API extern PFNGLGETSAMPLERPARAMETERIUIVPROC lx_glGetSamplerParameterIuiv;
#define glGetSamplerParameterIuiv lx_glGetSamplerParameterIuiv

typedef void (LX_GL_API_PTR PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat* params);
LX_API extern PFNGLGETSAMPLERPARAMETERFVPROC lx_glGetSamplerParameterfv;
#define glGetSamplerParameterfv lx_glGetSamplerParameterfv

typedef void (LX_GL_API_PTR PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint* params);
LX_API extern PFNGLGETSAMPLERPARAMETERIVPROC lx_glGetSamplerParameteriv;
#define glGetSamplerParameteriv lx_glGetSamplerParameteriv

typedef GLboolean (LX_GL_API_PTR PFNGLISSAMPLERPROC)(GLuint sampler);
LX_API extern PFNGLISSAMPLERPROC lx_glIsSampler;
#define glIsSampler lx_glIsSampler

typedef void (LX_GL_API_PTR PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);
LX_API extern PFNGLQUERYCOUNTERPROC lx_glQueryCounter;
#define glQueryCounter lx_glQueryCounter

typedef void (LX_GL_API_PTR PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint* param);
LX_API extern PFNGLSAMPLERPARAMETERIIVPROC lx_glSamplerParameterIiv;
#define glSamplerParameterIiv lx_glSamplerParameterIiv

typedef void (LX_GL_API_PTR PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint* param);
LX_API extern PFNGLSAMPLERPARAMETERIUIVPROC lx_glSamplerParameterIuiv;
#define glSamplerParameterIuiv lx_glSamplerParameterIuiv

typedef void (LX_GL_API_PTR PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);
LX_API extern PFNGLSAMPLERPARAMETERFPROC lx_glSamplerParameterf;
#define glSamplerParameterf lx_glSamplerParameterf

typedef void (LX_GL_API_PTR PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat* param);
LX_API extern PFNGLSAMPLERPARAMETERFVPROC lx_glSamplerParameterfv;
#define glSamplerParameterfv lx_glSamplerParameterfv

typedef void (LX_GL_API_PTR PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);
LX_API extern PFNGLSAMPLERPARAMETERIPROC lx_glSamplerParameteri;
#define glSamplerParameteri lx_glSamplerParameteri

typedef void (LX_GL_API_PTR PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint* param);
LX_API extern PFNGLSAMPLERPARAMETERIVPROC lx_glSamplerParameteriv;
#define glSamplerParameteriv lx_glSamplerParameteriv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);
LX_API extern PFNGLVERTEXATTRIBDIVISORPROC lx_glVertexAttribDivisor;
#define glVertexAttribDivisor lx_glVertexAttribDivisor

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
LX_API extern PFNGLVERTEXATTRIBP1UIPROC lx_glVertexAttribP1ui;
#define glVertexAttribP1ui lx_glVertexAttribP1ui

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
LX_API extern PFNGLVERTEXATTRIBP1UIVPROC lx_glVertexAttribP1uiv;
#define glVertexAttribP1uiv lx_glVertexAttribP1uiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
LX_API extern PFNGLVERTEXATTRIBP2UIPROC lx_glVertexAttribP2ui;
#define glVertexAttribP2ui lx_glVertexAttribP2ui

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
LX_API extern PFNGLVERTEXATTRIBP2UIVPROC lx_glVertexAttribP2uiv;
#define glVertexAttribP2uiv lx_glVertexAttribP2uiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
LX_API extern PFNGLVERTEXATTRIBP3UIPROC lx_glVertexAttribP3ui;
#define glVertexAttribP3ui lx_glVertexAttribP3ui

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
LX_API extern PFNGLVERTEXATTRIBP3UIVPROC lx_glVertexAttribP3uiv;
#define glVertexAttribP3uiv lx_glVertexAttribP3uiv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
LX_API extern PFNGLVERTEXATTRIBP4UIPROC lx_glVertexAttribP4ui;
#define glVertexAttribP4ui lx_glVertexAttribP4ui

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
LX_API extern PFNGLVERTEXATTRIBP4UIVPROC lx_glVertexAttribP4uiv;
#define glVertexAttribP4uiv lx_glVertexAttribP4uiv

// opengl 4.0
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBEGINQUERYINDEXEDPROC)(GLenum target, GLuint index, GLuint id);
LX_API extern PFNGLBEGINQUERYINDEXEDPROC lx_glBeginQueryIndexed;
#define glBeginQueryIndexed lx_glBeginQueryIndexed

typedef void (LX_GL_API_PTR PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);
LX_API extern PFNGLBINDTRANSFORMFEEDBACKPROC lx_glBindTransformFeedback;
#define glBindTransformFeedback lx_glBindTransformFeedback

typedef void (LX_GL_API_PTR PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
LX_API extern PFNGLBLENDEQUATIONSEPARATEIPROC lx_glBlendEquationSeparatei;
#define glBlendEquationSeparatei lx_glBlendEquationSeparatei

typedef void (LX_GL_API_PTR PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);
LX_API extern PFNGLBLENDEQUATIONIPROC lx_glBlendEquationi;
#define glBlendEquationi lx_glBlendEquationi

typedef void (LX_GL_API_PTR PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
LX_API extern PFNGLBLENDFUNCSEPARATEIPROC lx_glBlendFuncSeparatei;
#define glBlendFuncSeparatei lx_glBlendFuncSeparatei

typedef void (LX_GL_API_PTR PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);
LX_API extern PFNGLBLENDFUNCIPROC lx_glBlendFunci;
#define glBlendFunci lx_glBlendFunci

typedef void (LX_GL_API_PTR PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint* ids);
LX_API extern PFNGLDELETETRANSFORMFEEDBACKSPROC lx_glDeleteTransformFeedbacks;
#define glDeleteTransformFeedbacks lx_glDeleteTransformFeedbacks

typedef void (LX_GL_API_PTR PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void* indirect);
LX_API extern PFNGLDRAWARRAYSINDIRECTPROC lx_glDrawArraysIndirect;
#define glDrawArraysIndirect lx_glDrawArraysIndirect

typedef void (LX_GL_API_PTR PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void* indirect);
LX_API extern PFNGLDRAWELEMENTSINDIRECTPROC lx_glDrawElementsIndirect;
#define glDrawElementsIndirect lx_glDrawElementsIndirect

typedef void (LX_GL_API_PTR PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);
LX_API extern PFNGLDRAWTRANSFORMFEEDBACKPROC lx_glDrawTransformFeedback;
#define glDrawTransformFeedback lx_glDrawTransformFeedback

typedef void (LX_GL_API_PTR PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode, GLuint id, GLuint stream);
LX_API extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC lx_glDrawTransformFeedbackStream;
#define glDrawTransformFeedbackStream lx_glDrawTransformFeedbackStream

typedef void (LX_GL_API_PTR PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);
LX_API extern PFNGLENDQUERYINDEXEDPROC lx_glEndQueryIndexed;
#define glEndQueryIndexed lx_glEndQueryIndexed

typedef void (LX_GL_API_PTR PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint* ids);
LX_API extern PFNGLGENTRANSFORMFEEDBACKSPROC lx_glGenTransformFeedbacks;
#define glGenTransformFeedbacks lx_glGenTransformFeedbacks

typedef void (LX_GL_API_PTR PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei* length, GLchar* name);
LX_API extern PFNGLGETACTIVESUBROUTINENAMEPROC lx_glGetActiveSubroutineName;
#define glGetActiveSubroutineName lx_glGetActiveSubroutineName

typedef void (LX_GL_API_PTR PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei* length, GLchar* name);
LX_API extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC lx_glGetActiveSubroutineUniformName;
#define glGetActiveSubroutineUniformName lx_glGetActiveSubroutineUniformName

typedef void (LX_GL_API_PTR PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint* values);
LX_API extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC lx_glGetActiveSubroutineUniformiv;
#define glGetActiveSubroutineUniformiv lx_glGetActiveSubroutineUniformiv

typedef void (LX_GL_API_PTR PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program, GLenum shadertype, GLenum pname, GLint* values);
LX_API extern PFNGLGETPROGRAMSTAGEIVPROC lx_glGetProgramStageiv;
#define glGetProgramStageiv lx_glGetProgramStageiv

typedef void (LX_GL_API_PTR PFNGLGETQUERYINDEXEDIVPROC)(GLenum target, GLuint index, GLenum pname, GLint* params);
LX_API extern PFNGLGETQUERYINDEXEDIVPROC lx_glGetQueryIndexediv;
#define glGetQueryIndexediv lx_glGetQueryIndexediv

typedef GLuint (LX_GL_API_PTR PFNGLGETSUBROUTINEINDEXPROC)(GLuint program, GLenum shadertype, const GLchar* name);
LX_API extern PFNGLGETSUBROUTINEINDEXPROC lx_glGetSubroutineIndex;
#define glGetSubroutineIndex lx_glGetSubroutineIndex

typedef GLint (LX_GL_API_PTR PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program, GLenum shadertype, const GLchar* name);
LX_API extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC lx_glGetSubroutineUniformLocation;
#define glGetSubroutineUniformLocation lx_glGetSubroutineUniformLocation

typedef void (LX_GL_API_PTR PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype, GLint location, GLuint* params);
LX_API extern PFNGLGETUNIFORMSUBROUTINEUIVPROC lx_glGetUniformSubroutineuiv;
#define glGetUniformSubroutineuiv lx_glGetUniformSubroutineuiv

typedef void (LX_GL_API_PTR PFNGLGETUNIFORMDVPROC)(GLuint program, GLint location, GLdouble* params);
LX_API extern PFNGLGETUNIFORMDVPROC lx_glGetUniformdv;
#define glGetUniformdv lx_glGetUniformdv

typedef GLboolean (LX_GL_API_PTR PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
LX_API extern PFNGLISTRANSFORMFEEDBACKPROC lx_glIsTransformFeedback;
#define glIsTransformFeedback lx_glIsTransformFeedback

typedef void (LX_GL_API_PTR PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
LX_API extern PFNGLMINSAMPLESHADINGPROC lx_glMinSampleShading;
#define glMinSampleShading lx_glMinSampleShading

typedef void (LX_GL_API_PTR PFNGLPATCHPARAMETERFVPROC)(GLenum pname, const GLfloat* values);
LX_API extern PFNGLPATCHPARAMETERFVPROC lx_glPatchParameterfv;
#define glPatchParameterfv lx_glPatchParameterfv

typedef void (LX_GL_API_PTR PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);
LX_API extern PFNGLPATCHPARAMETERIPROC lx_glPatchParameteri;
#define glPatchParameteri lx_glPatchParameteri

typedef void (LX_GL_API_PTR PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
LX_API extern PFNGLPAUSETRANSFORMFEEDBACKPROC lx_glPauseTransformFeedback;
#define glPauseTransformFeedback lx_glPauseTransformFeedback

typedef void (LX_GL_API_PTR PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
LX_API extern PFNGLRESUMETRANSFORMFEEDBACKPROC lx_glResumeTransformFeedback;
#define glResumeTransformFeedback lx_glResumeTransformFeedback

typedef void (LX_GL_API_PTR PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);
LX_API extern PFNGLUNIFORM1DPROC lx_glUniform1d;
#define glUniform1d lx_glUniform1d

typedef void (LX_GL_API_PTR PFNGLUNIFORM1DVPROC)(GLint location, GLsizei count, const GLdouble* value);
LX_API extern PFNGLUNIFORM1DVPROC lx_glUniform1dv;
#define glUniform1dv lx_glUniform1dv

typedef void (LX_GL_API_PTR PFNGLUNIFORM2DPROC)(GLint location, GLdouble x, GLdouble y);
LX_API extern PFNGLUNIFORM2DPROC lx_glUniform2d;
#define glUniform2d lx_glUniform2d

typedef void (LX_GL_API_PTR PFNGLUNIFORM2DVPROC)(GLint location, GLsizei count, const GLdouble* value);
LX_API extern PFNGLUNIFORM2DVPROC lx_glUniform2dv;
#define glUniform2dv lx_glUniform2dv

typedef void (LX_GL_API_PTR PFNGLUNIFORM3DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z);
LX_API extern PFNGLUNIFORM3DPROC lx_glUniform3d;
#define glUniform3d lx_glUniform3d

typedef void (LX_GL_API_PTR PFNGLUNIFORM3DVPROC)(GLint location, GLsizei count, const GLdouble* value);
LX_API extern PFNGLUNIFORM3DVPROC lx_glUniform3dv;
#define glUniform3dv lx_glUniform3dv

typedef void (LX_GL_API_PTR PFNGLUNIFORM4DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
LX_API extern PFNGLUNIFORM4DPROC lx_glUniform4d;
#define glUniform4d lx_glUniform4d

typedef void (LX_GL_API_PTR PFNGLUNIFORM4DVPROC)(GLint location, GLsizei count, const GLdouble* value);
LX_API extern PFNGLUNIFORM4DVPROC lx_glUniform4dv;
#define glUniform4dv lx_glUniform4dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLUNIFORMMATRIX2DVPROC lx_glUniformMatrix2dv;
#define glUniformMatrix2dv lx_glUniformMatrix2dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLUNIFORMMATRIX2X3DVPROC lx_glUniformMatrix2x3dv;
#define glUniformMatrix2x3dv lx_glUniformMatrix2x3dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLUNIFORMMATRIX2X4DVPROC lx_glUniformMatrix2x4dv;
#define glUniformMatrix2x4dv lx_glUniformMatrix2x4dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLUNIFORMMATRIX3DVPROC lx_glUniformMatrix3dv;
#define glUniformMatrix3dv lx_glUniformMatrix3dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLUNIFORMMATRIX3X2DVPROC lx_glUniformMatrix3x2dv;
#define glUniformMatrix3x2dv lx_glUniformMatrix3x2dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLUNIFORMMATRIX3X4DVPROC lx_glUniformMatrix3x4dv;
#define glUniformMatrix3x4dv lx_glUniformMatrix3x4dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLUNIFORMMATRIX4DVPROC lx_glUniformMatrix4dv;
#define glUniformMatrix4dv lx_glUniformMatrix4dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLUNIFORMMATRIX4X2DVPROC lx_glUniformMatrix4x2dv;
#define glUniformMatrix4x2dv lx_glUniformMatrix4x2dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLUNIFORMMATRIX4X3DVPROC lx_glUniformMatrix4x3dv;
#define glUniformMatrix4x3dv lx_glUniformMatrix4x3dv

typedef void (LX_GL_API_PTR PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype, GLsizei count, const GLuint* indices);
LX_API extern PFNGLUNIFORMSUBROUTINESUIVPROC lx_glUniformSubroutinesuiv;
#define glUniformSubroutinesuiv lx_glUniformSubroutinesuiv

// opengl 4.1
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);
LX_API extern PFNGLACTIVESHADERPROGRAMPROC lx_glActiveShaderProgram;
#define glActiveShaderProgram lx_glActiveShaderProgram

typedef void (LX_GL_API_PTR PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
LX_API extern PFNGLBINDPROGRAMPIPELINEPROC lx_glBindProgramPipeline;
#define glBindProgramPipeline lx_glBindProgramPipeline

typedef void (LX_GL_API_PTR PFNGLCLEARDEPTHFPROC)(GLfloat d);
LX_API extern PFNGLCLEARDEPTHFPROC lx_glClearDepthf;
#define glClearDepthf lx_glClearDepthf

typedef GLuint (LX_GL_API_PTR PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const* strings);
LX_API extern PFNGLCREATESHADERPROGRAMVPROC lx_glCreateShaderProgramv;
#define glCreateShaderProgramv lx_glCreateShaderProgramv

typedef void (LX_GL_API_PTR PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint* pipelines);
LX_API extern PFNGLDELETEPROGRAMPIPELINESPROC lx_glDeleteProgramPipelines;
#define glDeleteProgramPipelines lx_glDeleteProgramPipelines

typedef void (LX_GL_API_PTR PFNGLDEPTHRANGEARRAYVPROC)(GLuint first, GLsizei count, const GLdouble* v);
LX_API extern PFNGLDEPTHRANGEARRAYVPROC lx_glDepthRangeArrayv;
#define glDepthRangeArrayv lx_glDepthRangeArrayv

typedef void (LX_GL_API_PTR PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index, GLdouble n, GLdouble f);
LX_API extern PFNGLDEPTHRANGEINDEXEDPROC lx_glDepthRangeIndexed;
#define glDepthRangeIndexed lx_glDepthRangeIndexed

typedef void (LX_GL_API_PTR PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);
LX_API extern PFNGLDEPTHRANGEFPROC lx_glDepthRangef;
#define glDepthRangef lx_glDepthRangef

typedef void (LX_GL_API_PTR PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint* pipelines);
LX_API extern PFNGLGENPROGRAMPIPELINESPROC lx_glGenProgramPipelines;
#define glGenProgramPipelines lx_glGenProgramPipelines

typedef void (LX_GL_API_PTR PFNGLGETDOUBLEI_VPROC)(GLenum target, GLuint index, GLdouble* data);
LX_API extern PFNGLGETDOUBLEI_VPROC lx_glGetDoublei_v;
#define glGetDoublei_v lx_glGetDoublei_v

typedef void (LX_GL_API_PTR PFNGLGETFLOATI_VPROC)(GLenum target, GLuint index, GLfloat* data);
LX_API extern PFNGLGETFLOATI_VPROC lx_glGetFloati_v;
#define glGetFloati_v lx_glGetFloati_v

typedef void (LX_GL_API_PTR PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei* length, GLenum* binaryFormat, void* binary);
LX_API extern PFNGLGETPROGRAMBINARYPROC lx_glGetProgramBinary;
#define glGetProgramBinary lx_glGetProgramBinary

typedef void (LX_GL_API_PTR PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
LX_API extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC lx_glGetProgramPipelineInfoLog;
#define glGetProgramPipelineInfoLog lx_glGetProgramPipelineInfoLog

typedef void (LX_GL_API_PTR PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint* params);
LX_API extern PFNGLGETPROGRAMPIPELINEIVPROC lx_glGetProgramPipelineiv;
#define glGetProgramPipelineiv lx_glGetProgramPipelineiv

typedef void (LX_GL_API_PTR PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);
LX_API extern PFNGLGETSHADERPRECISIONFORMATPROC lx_glGetShaderPrecisionFormat;
#define glGetShaderPrecisionFormat lx_glGetShaderPrecisionFormat

typedef void (LX_GL_API_PTR PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index, GLenum pname, GLdouble* params);
LX_API extern PFNGLGETVERTEXATTRIBLDVPROC lx_glGetVertexAttribLdv;
#define glGetVertexAttribLdv lx_glGetVertexAttribLdv

typedef GLboolean (LX_GL_API_PTR PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
LX_API extern PFNGLISPROGRAMPIPELINEPROC lx_glIsProgramPipeline;
#define glIsProgramPipeline lx_glIsProgramPipeline

typedef void (LX_GL_API_PTR PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void* binary, GLsizei length);
LX_API extern PFNGLPROGRAMBINARYPROC lx_glProgramBinary;
#define glProgramBinary lx_glProgramBinary

typedef void (LX_GL_API_PTR PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);
LX_API extern PFNGLPROGRAMPARAMETERIPROC lx_glProgramParameteri;
#define glProgramParameteri lx_glProgramParameteri

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM1DPROC)(GLuint program, GLint location, GLdouble v0);
LX_API extern PFNGLPROGRAMUNIFORM1DPROC lx_glProgramUniform1d;
#define glProgramUniform1d lx_glProgramUniform1d

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORM1DVPROC lx_glProgramUniform1dv;
#define glProgramUniform1dv lx_glProgramUniform1dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);
LX_API extern PFNGLPROGRAMUNIFORM1FPROC lx_glProgramUniform1f;
#define glProgramUniform1f lx_glProgramUniform1f

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORM1FVPROC lx_glProgramUniform1fv;
#define glProgramUniform1fv lx_glProgramUniform1fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);
LX_API extern PFNGLPROGRAMUNIFORM1IPROC lx_glProgramUniform1i;
#define glProgramUniform1i lx_glProgramUniform1i

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint* value);
LX_API extern PFNGLPROGRAMUNIFORM1IVPROC lx_glProgramUniform1iv;
#define glProgramUniform1iv lx_glProgramUniform1iv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);
LX_API extern PFNGLPROGRAMUNIFORM1UIPROC lx_glProgramUniform1ui;
#define glProgramUniform1ui lx_glProgramUniform1ui

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint* value);
LX_API extern PFNGLPROGRAMUNIFORM1UIVPROC lx_glProgramUniform1uiv;
#define glProgramUniform1uiv lx_glProgramUniform1uiv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM2DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
LX_API extern PFNGLPROGRAMUNIFORM2DPROC lx_glProgramUniform2d;
#define glProgramUniform2d lx_glProgramUniform2d

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORM2DVPROC lx_glProgramUniform2dv;
#define glProgramUniform2dv lx_glProgramUniform2dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
LX_API extern PFNGLPROGRAMUNIFORM2FPROC lx_glProgramUniform2f;
#define glProgramUniform2f lx_glProgramUniform2f

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORM2FVPROC lx_glProgramUniform2fv;
#define glProgramUniform2fv lx_glProgramUniform2fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);
LX_API extern PFNGLPROGRAMUNIFORM2IPROC lx_glProgramUniform2i;
#define glProgramUniform2i lx_glProgramUniform2i

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint* value);
LX_API extern PFNGLPROGRAMUNIFORM2IVPROC lx_glProgramUniform2iv;
#define glProgramUniform2iv lx_glProgramUniform2iv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
LX_API extern PFNGLPROGRAMUNIFORM2UIPROC lx_glProgramUniform2ui;
#define glProgramUniform2ui lx_glProgramUniform2ui

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint* value);
LX_API extern PFNGLPROGRAMUNIFORM2UIVPROC lx_glProgramUniform2uiv;
#define glProgramUniform2uiv lx_glProgramUniform2uiv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM3DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
LX_API extern PFNGLPROGRAMUNIFORM3DPROC lx_glProgramUniform3d;
#define glProgramUniform3d lx_glProgramUniform3d

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORM3DVPROC lx_glProgramUniform3dv;
#define glProgramUniform3dv lx_glProgramUniform3dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
LX_API extern PFNGLPROGRAMUNIFORM3FPROC lx_glProgramUniform3f;
#define glProgramUniform3f lx_glProgramUniform3f

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORM3FVPROC lx_glProgramUniform3fv;
#define glProgramUniform3fv lx_glProgramUniform3fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
LX_API extern PFNGLPROGRAMUNIFORM3IPROC lx_glProgramUniform3i;
#define glProgramUniform3i lx_glProgramUniform3i

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint* value);
LX_API extern PFNGLPROGRAMUNIFORM3IVPROC lx_glProgramUniform3iv;
#define glProgramUniform3iv lx_glProgramUniform3iv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
LX_API extern PFNGLPROGRAMUNIFORM3UIPROC lx_glProgramUniform3ui;
#define glProgramUniform3ui lx_glProgramUniform3ui

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint* value);
LX_API extern PFNGLPROGRAMUNIFORM3UIVPROC lx_glProgramUniform3uiv;
#define glProgramUniform3uiv lx_glProgramUniform3uiv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM4DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
LX_API extern PFNGLPROGRAMUNIFORM4DPROC lx_glProgramUniform4d;
#define glProgramUniform4d lx_glProgramUniform4d

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORM4DVPROC lx_glProgramUniform4dv;
#define glProgramUniform4dv lx_glProgramUniform4dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
LX_API extern PFNGLPROGRAMUNIFORM4FPROC lx_glProgramUniform4f;
#define glProgramUniform4f lx_glProgramUniform4f

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORM4FVPROC lx_glProgramUniform4fv;
#define glProgramUniform4fv lx_glProgramUniform4fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
LX_API extern PFNGLPROGRAMUNIFORM4IPROC lx_glProgramUniform4i;
#define glProgramUniform4i lx_glProgramUniform4i

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint* value);
LX_API extern PFNGLPROGRAMUNIFORM4IVPROC lx_glProgramUniform4iv;
#define glProgramUniform4iv lx_glProgramUniform4iv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
LX_API extern PFNGLPROGRAMUNIFORM4UIPROC lx_glProgramUniform4ui;
#define glProgramUniform4ui lx_glProgramUniform4ui

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint* value);
LX_API extern PFNGLPROGRAMUNIFORM4UIVPROC lx_glProgramUniform4uiv;
#define glProgramUniform4uiv lx_glProgramUniform4uiv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC lx_glProgramUniformMatrix2dv;
#define glProgramUniformMatrix2dv lx_glProgramUniformMatrix2dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC lx_glProgramUniformMatrix2fv;
#define glProgramUniformMatrix2fv lx_glProgramUniformMatrix2fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC lx_glProgramUniformMatrix2x3dv;
#define glProgramUniformMatrix2x3dv lx_glProgramUniformMatrix2x3dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC lx_glProgramUniformMatrix2x3fv;
#define glProgramUniformMatrix2x3fv lx_glProgramUniformMatrix2x3fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC lx_glProgramUniformMatrix2x4dv;
#define glProgramUniformMatrix2x4dv lx_glProgramUniformMatrix2x4dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC lx_glProgramUniformMatrix2x4fv;
#define glProgramUniformMatrix2x4fv lx_glProgramUniformMatrix2x4fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC lx_glProgramUniformMatrix3dv;
#define glProgramUniformMatrix3dv lx_glProgramUniformMatrix3dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC lx_glProgramUniformMatrix3fv;
#define glProgramUniformMatrix3fv lx_glProgramUniformMatrix3fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC lx_glProgramUniformMatrix3x2dv;
#define glProgramUniformMatrix3x2dv lx_glProgramUniformMatrix3x2dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC lx_glProgramUniformMatrix3x2fv;
#define glProgramUniformMatrix3x2fv lx_glProgramUniformMatrix3x2fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC lx_glProgramUniformMatrix3x4dv;
#define glProgramUniformMatrix3x4dv lx_glProgramUniformMatrix3x4dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC lx_glProgramUniformMatrix3x4fv;
#define glProgramUniformMatrix3x4fv lx_glProgramUniformMatrix3x4fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC lx_glProgramUniformMatrix4dv;
#define glProgramUniformMatrix4dv lx_glProgramUniformMatrix4dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC lx_glProgramUniformMatrix4fv;
#define glProgramUniformMatrix4fv lx_glProgramUniformMatrix4fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC lx_glProgramUniformMatrix4x2dv;
#define glProgramUniformMatrix4x2dv lx_glProgramUniformMatrix4x2dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC lx_glProgramUniformMatrix4x2fv;
#define glProgramUniformMatrix4x2fv lx_glProgramUniformMatrix4x2fv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC lx_glProgramUniformMatrix4x3dv;
#define glProgramUniformMatrix4x3dv lx_glProgramUniformMatrix4x3dv

typedef void (LX_GL_API_PTR PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
LX_API extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC lx_glProgramUniformMatrix4x3fv;
#define glProgramUniformMatrix4x3fv lx_glProgramUniformMatrix4x3fv

typedef void (LX_GL_API_PTR PFNGLRELEASESHADERCOMPILERPROC)(void);
LX_API extern PFNGLRELEASESHADERCOMPILERPROC lx_glReleaseShaderCompiler;
#define glReleaseShaderCompiler lx_glReleaseShaderCompiler

typedef void (LX_GL_API_PTR PFNGLSCISSORARRAYVPROC)(GLuint first, GLsizei count, const GLint* v);
LX_API extern PFNGLSCISSORARRAYVPROC lx_glScissorArrayv;
#define glScissorArrayv lx_glScissorArrayv

typedef void (LX_GL_API_PTR PFNGLSCISSORINDEXEDPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
LX_API extern PFNGLSCISSORINDEXEDPROC lx_glScissorIndexed;
#define glScissorIndexed lx_glScissorIndexed

typedef void (LX_GL_API_PTR PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint* v);
LX_API extern PFNGLSCISSORINDEXEDVPROC lx_glScissorIndexedv;
#define glScissorIndexedv lx_glScissorIndexedv

typedef void (LX_GL_API_PTR PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint* shaders, GLenum binaryFormat, const void* binary, GLsizei length);
LX_API extern PFNGLSHADERBINARYPROC lx_glShaderBinary;
#define glShaderBinary lx_glShaderBinary

typedef void (LX_GL_API_PTR PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
LX_API extern PFNGLUSEPROGRAMSTAGESPROC lx_glUseProgramStages;
#define glUseProgramStages lx_glUseProgramStages

typedef void (LX_GL_API_PTR PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
LX_API extern PFNGLVALIDATEPROGRAMPIPELINEPROC lx_glValidateProgramPipeline;
#define glValidateProgramPipeline lx_glValidateProgramPipeline

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);
LX_API extern PFNGLVERTEXATTRIBL1DPROC lx_glVertexAttribL1d;
#define glVertexAttribL1d lx_glVertexAttribL1d

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBL1DVPROC)(GLuint index, const GLdouble* v);
LX_API extern PFNGLVERTEXATTRIBL1DVPROC lx_glVertexAttribL1dv;
#define glVertexAttribL1dv lx_glVertexAttribL1dv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x, GLdouble y);
LX_API extern PFNGLVERTEXATTRIBL2DPROC lx_glVertexAttribL2d;
#define glVertexAttribL2d lx_glVertexAttribL2d

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBL2DVPROC)(GLuint index, const GLdouble* v);
LX_API extern PFNGLVERTEXATTRIBL2DVPROC lx_glVertexAttribL2dv;
#define glVertexAttribL2dv lx_glVertexAttribL2dv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBL3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
LX_API extern PFNGLVERTEXATTRIBL3DPROC lx_glVertexAttribL3d;
#define glVertexAttribL3d lx_glVertexAttribL3d

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBL3DVPROC)(GLuint index, const GLdouble* v);
LX_API extern PFNGLVERTEXATTRIBL3DVPROC lx_glVertexAttribL3dv;
#define glVertexAttribL3dv lx_glVertexAttribL3dv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBL4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
LX_API extern PFNGLVERTEXATTRIBL4DPROC lx_glVertexAttribL4d;
#define glVertexAttribL4d lx_glVertexAttribL4d

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBL4DVPROC)(GLuint index, const GLdouble* v);
LX_API extern PFNGLVERTEXATTRIBL4DVPROC lx_glVertexAttribL4dv;
#define glVertexAttribL4dv lx_glVertexAttribL4dv

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer);
LX_API extern PFNGLVERTEXATTRIBLPOINTERPROC lx_glVertexAttribLPointer;
#define glVertexAttribLPointer lx_glVertexAttribLPointer

typedef void (LX_GL_API_PTR PFNGLVIEWPORTARRAYVPROC)(GLuint first, GLsizei count, const GLfloat* v);
LX_API extern PFNGLVIEWPORTARRAYVPROC lx_glViewportArrayv;
#define glViewportArrayv lx_glViewportArrayv

typedef void (LX_GL_API_PTR PFNGLVIEWPORTINDEXEDFPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
LX_API extern PFNGLVIEWPORTINDEXEDFPROC lx_glViewportIndexedf;
#define glViewportIndexedf lx_glViewportIndexedf

typedef void (LX_GL_API_PTR PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index, const GLfloat* v);
LX_API extern PFNGLVIEWPORTINDEXEDFVPROC lx_glViewportIndexedfv;
#define glViewportIndexedfv lx_glViewportIndexedfv

// opengl 4.2
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
LX_API extern PFNGLBINDIMAGETEXTUREPROC lx_glBindImageTexture;
#define glBindImageTexture lx_glBindImageTexture

typedef void (LX_GL_API_PTR PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
LX_API extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC lx_glDrawArraysInstancedBaseInstance;
#define glDrawArraysInstancedBaseInstance lx_glDrawArraysInstancedBaseInstance

typedef void (LX_GL_API_PTR PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount, GLuint baseinstance);
LX_API extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC lx_glDrawElementsInstancedBaseInstance;
#define glDrawElementsInstancedBaseInstance lx_glDrawElementsInstancedBaseInstance

typedef void (LX_GL_API_PTR PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
LX_API extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC lx_glDrawElementsInstancedBaseVertexBaseInstance;
#define glDrawElementsInstancedBaseVertexBaseInstance lx_glDrawElementsInstancedBaseVertexBaseInstance

typedef void (LX_GL_API_PTR PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode, GLuint id, GLsizei instancecount);
LX_API extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC lx_glDrawTransformFeedbackInstanced;
#define glDrawTransformFeedbackInstanced lx_glDrawTransformFeedbackInstanced

typedef void (LX_GL_API_PTR PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
LX_API extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC lx_glDrawTransformFeedbackStreamInstanced;
#define glDrawTransformFeedbackStreamInstanced lx_glDrawTransformFeedbackStreamInstanced

typedef void (LX_GL_API_PTR PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program, GLuint bufferIndex, GLenum pname, GLint* params);
LX_API extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC lx_glGetActiveAtomicCounterBufferiv;
#define glGetActiveAtomicCounterBufferiv lx_glGetActiveAtomicCounterBufferiv

typedef void (LX_GL_API_PTR PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint* params);
LX_API extern PFNGLGETINTERNALFORMATIVPROC lx_glGetInternalformativ;
#define glGetInternalformativ lx_glGetInternalformativ

typedef void (LX_GL_API_PTR PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
LX_API extern PFNGLMEMORYBARRIERPROC lx_glMemoryBarrier;
#define glMemoryBarrier lx_glMemoryBarrier

typedef void (LX_GL_API_PTR PFNGLTEXSTORAGE1DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
LX_API extern PFNGLTEXSTORAGE1DPROC lx_glTexStorage1D;
#define glTexStorage1D lx_glTexStorage1D

typedef void (LX_GL_API_PTR PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
LX_API extern PFNGLTEXSTORAGE2DPROC lx_glTexStorage2D;
#define glTexStorage2D lx_glTexStorage2D

typedef void (LX_GL_API_PTR PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
LX_API extern PFNGLTEXSTORAGE3DPROC lx_glTexStorage3D;
#define glTexStorage3D lx_glTexStorage3D

// opengl 4.3
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
LX_API extern PFNGLBINDVERTEXBUFFERPROC lx_glBindVertexBuffer;
#define glBindVertexBuffer lx_glBindVertexBuffer

typedef void (LX_GL_API_PTR PFNGLCLEARBUFFERDATAPROC)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void* data);
LX_API extern PFNGLCLEARBUFFERDATAPROC lx_glClearBufferData;
#define glClearBufferData lx_glClearBufferData

typedef void (LX_GL_API_PTR PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void* data);
LX_API extern PFNGLCLEARBUFFERSUBDATAPROC lx_glClearBufferSubData;
#define glClearBufferSubData lx_glClearBufferSubData

typedef void (LX_GL_API_PTR PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
LX_API extern PFNGLCOPYIMAGESUBDATAPROC lx_glCopyImageSubData;
#define glCopyImageSubData lx_glCopyImageSubData

typedef void (LX_GL_API_PTR PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void* userParam);
LX_API extern PFNGLDEBUGMESSAGECALLBACKPROC lx_glDebugMessageCallback;
#define glDebugMessageCallback lx_glDebugMessageCallback

typedef void (LX_GL_API_PTR PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint* ids, GLboolean enabled);
LX_API extern PFNGLDEBUGMESSAGECONTROLPROC lx_glDebugMessageControl;
#define glDebugMessageControl lx_glDebugMessageControl

typedef void (LX_GL_API_PTR PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* buf);
LX_API extern PFNGLDEBUGMESSAGEINSERTPROC lx_glDebugMessageInsert;
#define glDebugMessageInsert lx_glDebugMessageInsert

typedef void (LX_GL_API_PTR PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
LX_API extern PFNGLDISPATCHCOMPUTEPROC lx_glDispatchCompute;
#define glDispatchCompute lx_glDispatchCompute

typedef void (LX_GL_API_PTR PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
LX_API extern PFNGLDISPATCHCOMPUTEINDIRECTPROC lx_glDispatchComputeIndirect;
#define glDispatchComputeIndirect lx_glDispatchComputeIndirect

typedef void (LX_GL_API_PTR PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
LX_API extern PFNGLFRAMEBUFFERPARAMETERIPROC lx_glFramebufferParameteri;
#define glFramebufferParameteri lx_glFramebufferParameteri

typedef GLuint (LX_GL_API_PTR PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum* sources, GLenum* types, GLuint* ids, GLenum* severities, GLsizei* lengths, GLchar* messageLog);
LX_API extern PFNGLGETDEBUGMESSAGELOGPROC lx_glGetDebugMessageLog;
#define glGetDebugMessageLog lx_glGetDebugMessageLog

typedef void (LX_GL_API_PTR PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
LX_API extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC lx_glGetFramebufferParameteriv;
#define glGetFramebufferParameteriv lx_glGetFramebufferParameteriv

typedef void (LX_GL_API_PTR PFNGLGETINTERNALFORMATI64VPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64* params);
LX_API extern PFNGLGETINTERNALFORMATI64VPROC lx_glGetInternalformati64v;
#define glGetInternalformati64v lx_glGetInternalformati64v

typedef void (LX_GL_API_PTR PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei* length, GLchar* label);
LX_API extern PFNGLGETOBJECTLABELPROC lx_glGetObjectLabel;
#define glGetObjectLabel lx_glGetObjectLabel

typedef void (LX_GL_API_PTR PFNGLGETOBJECTPTRLABELPROC)(const void* ptr, GLsizei bufSize, GLsizei* length, GLchar* label);
LX_API extern PFNGLGETOBJECTPTRLABELPROC lx_glGetObjectPtrLabel;
#define glGetObjectPtrLabel lx_glGetObjectPtrLabel
LX_API extern PFNGLGETPOINTERVPROC lx_glGetPointerv;
#define glGetPointerv lx_glGetPointerv

typedef void (LX_GL_API_PTR PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint* params);
LX_API extern PFNGLGETPROGRAMINTERFACEIVPROC lx_glGetProgramInterfaceiv;
#define glGetProgramInterfaceiv lx_glGetProgramInterfaceiv

typedef GLuint (LX_GL_API_PTR PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar* name);
LX_API extern PFNGLGETPROGRAMRESOURCEINDEXPROC lx_glGetProgramResourceIndex;
#define glGetProgramResourceIndex lx_glGetProgramResourceIndex

typedef GLint (LX_GL_API_PTR PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar* name);
LX_API extern PFNGLGETPROGRAMRESOURCELOCATIONPROC lx_glGetProgramResourceLocation;
#define glGetProgramResourceLocation lx_glGetProgramResourceLocation

typedef GLint (LX_GL_API_PTR PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program, GLenum programInterface, const GLchar* name);
LX_API extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC lx_glGetProgramResourceLocationIndex;
#define glGetProgramResourceLocationIndex lx_glGetProgramResourceLocationIndex

typedef void (LX_GL_API_PTR PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei* length, GLchar* name);
LX_API extern PFNGLGETPROGRAMRESOURCENAMEPROC lx_glGetProgramResourceName;
#define glGetProgramResourceName lx_glGetProgramResourceName

typedef void (LX_GL_API_PTR PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum* props, GLsizei count, GLsizei* length, GLint* params);
LX_API extern PFNGLGETPROGRAMRESOURCEIVPROC lx_glGetProgramResourceiv;
#define glGetProgramResourceiv lx_glGetProgramResourceiv

typedef void (LX_GL_API_PTR PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);
LX_API extern PFNGLINVALIDATEBUFFERDATAPROC lx_glInvalidateBufferData;
#define glInvalidateBufferData lx_glInvalidateBufferData

typedef void (LX_GL_API_PTR PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
LX_API extern PFNGLINVALIDATEBUFFERSUBDATAPROC lx_glInvalidateBufferSubData;
#define glInvalidateBufferSubData lx_glInvalidateBufferSubData

typedef void (LX_GL_API_PTR PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum* attachments);
LX_API extern PFNGLINVALIDATEFRAMEBUFFERPROC lx_glInvalidateFramebuffer;
#define glInvalidateFramebuffer lx_glInvalidateFramebuffer

typedef void (LX_GL_API_PTR PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
LX_API extern PFNGLINVALIDATESUBFRAMEBUFFERPROC lx_glInvalidateSubFramebuffer;
#define glInvalidateSubFramebuffer lx_glInvalidateSubFramebuffer

typedef void (LX_GL_API_PTR PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture, GLint level);
LX_API extern PFNGLINVALIDATETEXIMAGEPROC lx_glInvalidateTexImage;
#define glInvalidateTexImage lx_glInvalidateTexImage

typedef void (LX_GL_API_PTR PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
LX_API extern PFNGLINVALIDATETEXSUBIMAGEPROC lx_glInvalidateTexSubImage;
#define glInvalidateTexSubImage lx_glInvalidateTexSubImage

typedef void (LX_GL_API_PTR PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode, const void* indirect, GLsizei drawcount, GLsizei stride);
LX_API extern PFNGLMULTIDRAWARRAYSINDIRECTPROC lx_glMultiDrawArraysIndirect;
#define glMultiDrawArraysIndirect lx_glMultiDrawArraysIndirect

typedef void (LX_GL_API_PTR PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void* indirect, GLsizei drawcount, GLsizei stride);
LX_API extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC lx_glMultiDrawElementsIndirect;
#define glMultiDrawElementsIndirect lx_glMultiDrawElementsIndirect

typedef void (LX_GL_API_PTR PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar* label);
LX_API extern PFNGLOBJECTLABELPROC lx_glObjectLabel;
#define glObjectLabel lx_glObjectLabel

typedef void (LX_GL_API_PTR PFNGLOBJECTPTRLABELPROC)(const void* ptr, GLsizei length, const GLchar* label);
LX_API extern PFNGLOBJECTPTRLABELPROC lx_glObjectPtrLabel;
#define glObjectPtrLabel lx_glObjectPtrLabel

typedef void (LX_GL_API_PTR PFNGLPOPDEBUGGROUPPROC)(void);
LX_API extern PFNGLPOPDEBUGGROUPPROC lx_glPopDebugGroup;
#define glPopDebugGroup lx_glPopDebugGroup

typedef void (LX_GL_API_PTR PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar* message);
LX_API extern PFNGLPUSHDEBUGGROUPPROC lx_glPushDebugGroup;
#define glPushDebugGroup lx_glPushDebugGroup

typedef void (LX_GL_API_PTR PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
LX_API extern PFNGLSHADERSTORAGEBLOCKBINDINGPROC lx_glShaderStorageBlockBinding;
#define glShaderStorageBlockBinding lx_glShaderStorageBlockBinding

typedef void (LX_GL_API_PTR PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
LX_API extern PFNGLTEXBUFFERRANGEPROC lx_glTexBufferRange;
#define glTexBufferRange lx_glTexBufferRange

typedef void (LX_GL_API_PTR PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
LX_API extern PFNGLTEXSTORAGE2DMULTISAMPLEPROC lx_glTexStorage2DMultisample;
#define glTexStorage2DMultisample lx_glTexStorage2DMultisample

typedef void (LX_GL_API_PTR PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
LX_API extern PFNGLTEXSTORAGE3DMULTISAMPLEPROC lx_glTexStorage3DMultisample;
#define glTexStorage3DMultisample lx_glTexStorage3DMultisample

typedef void (LX_GL_API_PTR PFNGLTEXTUREVIEWPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
LX_API extern PFNGLTEXTUREVIEWPROC lx_glTextureView;
#define glTextureView lx_glTextureView

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);
LX_API extern PFNGLVERTEXATTRIBBINDINGPROC lx_glVertexAttribBinding;
#define glVertexAttribBinding lx_glVertexAttribBinding

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
LX_API extern PFNGLVERTEXATTRIBFORMATPROC lx_glVertexAttribFormat;
#define glVertexAttribFormat lx_glVertexAttribFormat

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
LX_API extern PFNGLVERTEXATTRIBIFORMATPROC lx_glVertexAttribIFormat;
#define glVertexAttribIFormat lx_glVertexAttribIFormat

typedef void (LX_GL_API_PTR PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
LX_API extern PFNGLVERTEXATTRIBLFORMATPROC lx_glVertexAttribLFormat;
#define glVertexAttribLFormat lx_glVertexAttribLFormat

typedef void (LX_GL_API_PTR PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);
LX_API extern PFNGLVERTEXBINDINGDIVISORPROC lx_glVertexBindingDivisor;
#define glVertexBindingDivisor lx_glVertexBindingDivisor

// opengl 4.4
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBINDBUFFERSBASEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint* buffers);
LX_API extern PFNGLBINDBUFFERSBASEPROC lx_glBindBuffersBase;
#define glBindBuffersBase lx_glBindBuffersBase

typedef void (LX_GL_API_PTR PFNGLBINDBUFFERSRANGEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint* buffers, const GLintptr* offsets, const GLsizeiptr* sizes);
LX_API extern PFNGLBINDBUFFERSRANGEPROC lx_glBindBuffersRange;
#define glBindBuffersRange lx_glBindBuffersRange

typedef void (LX_GL_API_PTR PFNGLBINDIMAGETEXTURESPROC)(GLuint first, GLsizei count, const GLuint* textures);
LX_API extern PFNGLBINDIMAGETEXTURESPROC lx_glBindImageTextures;
#define glBindImageTextures lx_glBindImageTextures

typedef void (LX_GL_API_PTR PFNGLBINDSAMPLERSPROC)(GLuint first, GLsizei count, const GLuint* samplers);
LX_API extern PFNGLBINDSAMPLERSPROC lx_glBindSamplers;
#define glBindSamplers lx_glBindSamplers

typedef void (LX_GL_API_PTR PFNGLBINDTEXTURESPROC)(GLuint first, GLsizei count, const GLuint* textures);
LX_API extern PFNGLBINDTEXTURESPROC lx_glBindTextures;
#define glBindTextures lx_glBindTextures

typedef void (LX_GL_API_PTR PFNGLBINDVERTEXBUFFERSPROC)(GLuint first, GLsizei count, const GLuint* buffers, const GLintptr* offsets, const GLsizei* strides);
LX_API extern PFNGLBINDVERTEXBUFFERSPROC lx_glBindVertexBuffers;
#define glBindVertexBuffers lx_glBindVertexBuffers

typedef void (LX_GL_API_PTR PFNGLBUFFERSTORAGEPROC)(GLenum target, GLsizeiptr size, const void* data, GLbitfield flags);
LX_API extern PFNGLBUFFERSTORAGEPROC lx_glBufferStorage;
#define glBufferStorage lx_glBufferStorage

typedef void (LX_GL_API_PTR PFNGLCLEARTEXIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, const void* data);
LX_API extern PFNGLCLEARTEXIMAGEPROC lx_glClearTexImage;
#define glClearTexImage lx_glClearTexImage

typedef void (LX_GL_API_PTR PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* data);
LX_API extern PFNGLCLEARTEXSUBIMAGEPROC lx_glClearTexSubImage;
#define glClearTexSubImage lx_glClearTexSubImage

// opengl 4.5
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLBINDTEXTUREUNITPROC)(GLuint unit, GLuint texture);
LX_API extern PFNGLBINDTEXTUREUNITPROC lx_glBindTextureUnit;
#define glBindTextureUnit lx_glBindTextureUnit

typedef void (LX_GL_API_PTR PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
LX_API extern PFNGLBLITNAMEDFRAMEBUFFERPROC lx_glBlitNamedFramebuffer;
#define glBlitNamedFramebuffer lx_glBlitNamedFramebuffer

typedef GLenum (LX_GL_API_PTR PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(GLuint framebuffer, GLenum target);
LX_API extern PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC lx_glCheckNamedFramebufferStatus;
#define glCheckNamedFramebufferStatus lx_glCheckNamedFramebufferStatus

typedef void (LX_GL_API_PTR PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void* data);
LX_API extern PFNGLCLEARNAMEDBUFFERDATAPROC lx_glClearNamedBufferData;
#define glClearNamedBufferData lx_glClearNamedBufferData

typedef void (LX_GL_API_PTR PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void* data);
LX_API extern PFNGLCLEARNAMEDBUFFERSUBDATAPROC lx_glClearNamedBufferSubData;
#define glClearNamedBufferSubData lx_glClearNamedBufferSubData

typedef void (LX_GL_API_PTR PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
LX_API extern PFNGLCLEARNAMEDFRAMEBUFFERFIPROC lx_glClearNamedFramebufferfi;
#define glClearNamedFramebufferfi lx_glClearNamedFramebufferfi

typedef void (LX_GL_API_PTR PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat* value);
LX_API extern PFNGLCLEARNAMEDFRAMEBUFFERFVPROC lx_glClearNamedFramebufferfv;
#define glClearNamedFramebufferfv lx_glClearNamedFramebufferfv

typedef void (LX_GL_API_PTR PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint* value);
LX_API extern PFNGLCLEARNAMEDFRAMEBUFFERIVPROC lx_glClearNamedFramebufferiv;
#define glClearNamedFramebufferiv lx_glClearNamedFramebufferiv

typedef void (LX_GL_API_PTR PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint* value);
LX_API extern PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC lx_glClearNamedFramebufferuiv;
#define glClearNamedFramebufferuiv lx_glClearNamedFramebufferuiv

typedef void (LX_GL_API_PTR PFNGLCLIPCONTROLPROC)(GLenum origin, GLenum depth);
LX_API extern PFNGLCLIPCONTROLPROC lx_glClipControl;
#define glClipControl lx_glClipControl

typedef void (LX_GL_API_PTR PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data);
LX_API extern PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC lx_glCompressedTextureSubImage1D;
#define glCompressedTextureSubImage1D lx_glCompressedTextureSubImage1D

typedef void (LX_GL_API_PTR PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
LX_API extern PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC lx_glCompressedTextureSubImage2D;
#define glCompressedTextureSubImage2D lx_glCompressedTextureSubImage2D

typedef void (LX_GL_API_PTR PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data);
LX_API extern PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC lx_glCompressedTextureSubImage3D;
#define glCompressedTextureSubImage3D lx_glCompressedTextureSubImage3D

typedef void (LX_GL_API_PTR PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
LX_API extern PFNGLCOPYNAMEDBUFFERSUBDATAPROC lx_glCopyNamedBufferSubData;
#define glCopyNamedBufferSubData lx_glCopyNamedBufferSubData

typedef void (LX_GL_API_PTR PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
LX_API extern PFNGLCOPYTEXTURESUBIMAGE1DPROC lx_glCopyTextureSubImage1D;
#define glCopyTextureSubImage1D lx_glCopyTextureSubImage1D

typedef void (LX_GL_API_PTR PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
LX_API extern PFNGLCOPYTEXTURESUBIMAGE2DPROC lx_glCopyTextureSubImage2D;
#define glCopyTextureSubImage2D lx_glCopyTextureSubImage2D

typedef void (LX_GL_API_PTR PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
LX_API extern PFNGLCOPYTEXTURESUBIMAGE3DPROC lx_glCopyTextureSubImage3D;
#define glCopyTextureSubImage3D lx_glCopyTextureSubImage3D

typedef void (LX_GL_API_PTR PFNGLCREATEBUFFERSPROC)(GLsizei n, GLuint* buffers);
LX_API extern PFNGLCREATEBUFFERSPROC lx_glCreateBuffers;
#define glCreateBuffers lx_glCreateBuffers

typedef void (LX_GL_API_PTR PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n, GLuint* framebuffers);
LX_API extern PFNGLCREATEFRAMEBUFFERSPROC lx_glCreateFramebuffers;
#define glCreateFramebuffers lx_glCreateFramebuffers

typedef void (LX_GL_API_PTR PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n, GLuint* pipelines);
LX_API extern PFNGLCREATEPROGRAMPIPELINESPROC lx_glCreateProgramPipelines;
#define glCreateProgramPipelines lx_glCreateProgramPipelines

typedef void (LX_GL_API_PTR PFNGLCREATEQUERIESPROC)(GLenum target, GLsizei n, GLuint* ids);
LX_API extern PFNGLCREATEQUERIESPROC lx_glCreateQueries;
#define glCreateQueries lx_glCreateQueries

typedef void (LX_GL_API_PTR PFNGLCREATERENDERBUFFERSPROC)(GLsizei n, GLuint* renderbuffers);
LX_API extern PFNGLCREATERENDERBUFFERSPROC lx_glCreateRenderbuffers;
#define glCreateRenderbuffers lx_glCreateRenderbuffers

typedef void (LX_GL_API_PTR PFNGLCREATESAMPLERSPROC)(GLsizei n, GLuint* samplers);
LX_API extern PFNGLCREATESAMPLERSPROC lx_glCreateSamplers;
#define glCreateSamplers lx_glCreateSamplers

typedef void (LX_GL_API_PTR PFNGLCREATETEXTURESPROC)(GLenum target, GLsizei n, GLuint* textures);
LX_API extern PFNGLCREATETEXTURESPROC lx_glCreateTextures;
#define glCreateTextures lx_glCreateTextures

typedef void (LX_GL_API_PTR PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint* ids);
LX_API extern PFNGLCREATETRANSFORMFEEDBACKSPROC lx_glCreateTransformFeedbacks;
#define glCreateTransformFeedbacks lx_glCreateTransformFeedbacks

typedef void (LX_GL_API_PTR PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n, GLuint* arrays);
LX_API extern PFNGLCREATEVERTEXARRAYSPROC lx_glCreateVertexArrays;
#define glCreateVertexArrays lx_glCreateVertexArrays

typedef void (LX_GL_API_PTR PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
LX_API extern PFNGLDISABLEVERTEXARRAYATTRIBPROC lx_glDisableVertexArrayAttrib;
#define glDisableVertexArrayAttrib lx_glDisableVertexArrayAttrib

typedef void (LX_GL_API_PTR PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
LX_API extern PFNGLENABLEVERTEXARRAYATTRIBPROC lx_glEnableVertexArrayAttrib;
#define glEnableVertexArrayAttrib lx_glEnableVertexArrayAttrib

typedef void (LX_GL_API_PTR PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
LX_API extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC lx_glFlushMappedNamedBufferRange;
#define glFlushMappedNamedBufferRange lx_glFlushMappedNamedBufferRange

typedef void (LX_GL_API_PTR PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture);
LX_API extern PFNGLGENERATETEXTUREMIPMAPPROC lx_glGenerateTextureMipmap;
#define glGenerateTextureMipmap lx_glGenerateTextureMipmap

typedef void (LX_GL_API_PTR PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLsizei bufSize, void* pixels);
LX_API extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC lx_glGetCompressedTextureImage;
#define glGetCompressedTextureImage lx_glGetCompressedTextureImage

typedef void (LX_GL_API_PTR PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void* pixels);
LX_API extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC lx_glGetCompressedTextureSubImage;
#define glGetCompressedTextureSubImage lx_glGetCompressedTextureSubImage

typedef GLenum (LX_GL_API_PTR PFNGLGETGRAPHICSRESETSTATUSPROC)(void);
LX_API extern PFNGLGETGRAPHICSRESETSTATUSPROC lx_glGetGraphicsResetStatus;
#define glGetGraphicsResetStatus lx_glGetGraphicsResetStatus

typedef void (LX_GL_API_PTR PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer, GLenum pname, GLint64* params);
LX_API extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC lx_glGetNamedBufferParameteri64v;
#define glGetNamedBufferParameteri64v lx_glGetNamedBufferParameteri64v

typedef void (LX_GL_API_PTR PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer, GLenum pname, GLint* params);
LX_API extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC lx_glGetNamedBufferParameteriv;
#define glGetNamedBufferParameteriv lx_glGetNamedBufferParameteriv

typedef void (LX_GL_API_PTR PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer, GLenum pname, void ** params);
LX_API extern PFNGLGETNAMEDBUFFERPOINTERVPROC lx_glGetNamedBufferPointerv;
#define glGetNamedBufferPointerv lx_glGetNamedBufferPointerv

typedef void (LX_GL_API_PTR PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void* data);
LX_API extern PFNGLGETNAMEDBUFFERSUBDATAPROC lx_glGetNamedBufferSubData;
#define glGetNamedBufferSubData lx_glGetNamedBufferSubData

typedef void (LX_GL_API_PTR PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint* params);
LX_API extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC lx_glGetNamedFramebufferAttachmentParameteriv;
#define glGetNamedFramebufferAttachmentParameteriv lx_glGetNamedFramebufferAttachmentParameteriv

typedef void (LX_GL_API_PTR PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(GLuint framebuffer, GLenum pname, GLint* param);
LX_API extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC lx_glGetNamedFramebufferParameteriv;
#define glGetNamedFramebufferParameteriv lx_glGetNamedFramebufferParameteriv

typedef void (LX_GL_API_PTR PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(GLuint renderbuffer, GLenum pname, GLint* params);
LX_API extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC lx_glGetNamedRenderbufferParameteriv;
#define glGetNamedRenderbufferParameteriv lx_glGetNamedRenderbufferParameteriv

typedef void (LX_GL_API_PTR PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
LX_API extern PFNGLGETQUERYBUFFEROBJECTI64VPROC lx_glGetQueryBufferObjecti64v;
#define glGetQueryBufferObjecti64v lx_glGetQueryBufferObjecti64v

typedef void (LX_GL_API_PTR PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
LX_API extern PFNGLGETQUERYBUFFEROBJECTIVPROC lx_glGetQueryBufferObjectiv;
#define glGetQueryBufferObjectiv lx_glGetQueryBufferObjectiv

typedef void (LX_GL_API_PTR PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
LX_API extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC lx_glGetQueryBufferObjectui64v;
#define glGetQueryBufferObjectui64v lx_glGetQueryBufferObjectui64v

typedef void (LX_GL_API_PTR PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
LX_API extern PFNGLGETQUERYBUFFEROBJECTUIVPROC lx_glGetQueryBufferObjectuiv;
#define glGetQueryBufferObjectuiv lx_glGetQueryBufferObjectuiv

typedef void (LX_GL_API_PTR PFNGLGETTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* pixels);
LX_API extern PFNGLGETTEXTUREIMAGEPROC lx_glGetTextureImage;
#define glGetTextureImage lx_glGetTextureImage

typedef void (LX_GL_API_PTR PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture, GLint level, GLenum pname, GLfloat* params);
LX_API extern PFNGLGETTEXTURELEVELPARAMETERFVPROC lx_glGetTextureLevelParameterfv;
#define glGetTextureLevelParameterfv lx_glGetTextureLevelParameterfv

typedef void (LX_GL_API_PTR PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture, GLint level, GLenum pname, GLint* params);
LX_API extern PFNGLGETTEXTURELEVELPARAMETERIVPROC lx_glGetTextureLevelParameteriv;
#define glGetTextureLevelParameteriv lx_glGetTextureLevelParameteriv

typedef void (LX_GL_API_PTR PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, GLint* params);
LX_API extern PFNGLGETTEXTUREPARAMETERIIVPROC lx_glGetTextureParameterIiv;
#define glGetTextureParameterIiv lx_glGetTextureParameterIiv

typedef void (LX_GL_API_PTR PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, GLuint* params);
LX_API extern PFNGLGETTEXTUREPARAMETERIUIVPROC lx_glGetTextureParameterIuiv;
#define glGetTextureParameterIuiv lx_glGetTextureParameterIuiv

typedef void (LX_GL_API_PTR PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, GLfloat* params);
LX_API extern PFNGLGETTEXTUREPARAMETERFVPROC lx_glGetTextureParameterfv;
#define glGetTextureParameterfv lx_glGetTextureParameterfv

typedef void (LX_GL_API_PTR PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, GLint* params);
LX_API extern PFNGLGETTEXTUREPARAMETERIVPROC lx_glGetTextureParameteriv;
#define glGetTextureParameteriv lx_glGetTextureParameteriv

typedef void (LX_GL_API_PTR PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void* pixels);
LX_API extern PFNGLGETTEXTURESUBIMAGEPROC lx_glGetTextureSubImage;
#define glGetTextureSubImage lx_glGetTextureSubImage

typedef void (LX_GL_API_PTR PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint64* param);
LX_API extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC lx_glGetTransformFeedbacki64_v;
#define glGetTransformFeedbacki64_v lx_glGetTransformFeedbacki64_v

typedef void (LX_GL_API_PTR PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint* param);
LX_API extern PFNGLGETTRANSFORMFEEDBACKI_VPROC lx_glGetTransformFeedbacki_v;
#define glGetTransformFeedbacki_v lx_glGetTransformFeedbacki_v

typedef void (LX_GL_API_PTR PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb, GLenum pname, GLint* param);
LX_API extern PFNGLGETTRANSFORMFEEDBACKIVPROC lx_glGetTransformFeedbackiv;
#define glGetTransformFeedbackiv lx_glGetTransformFeedbackiv

typedef void (LX_GL_API_PTR PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint64* param);
LX_API extern PFNGLGETVERTEXARRAYINDEXED64IVPROC lx_glGetVertexArrayIndexed64iv;
#define glGetVertexArrayIndexed64iv lx_glGetVertexArrayIndexed64iv

typedef void (LX_GL_API_PTR PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint* param);
LX_API extern PFNGLGETVERTEXARRAYINDEXEDIVPROC lx_glGetVertexArrayIndexediv;
#define glGetVertexArrayIndexediv lx_glGetVertexArrayIndexediv

typedef void (LX_GL_API_PTR PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj, GLenum pname, GLint* param);
LX_API extern PFNGLGETVERTEXARRAYIVPROC lx_glGetVertexArrayiv;
#define glGetVertexArrayiv lx_glGetVertexArrayiv

typedef void (LX_GL_API_PTR PFNGLGETNCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint lod, GLsizei bufSize, void* pixels);
LX_API extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC lx_glGetnCompressedTexImage;
#define glGetnCompressedTexImage lx_glGetnCompressedTexImage

typedef void (LX_GL_API_PTR PFNGLGETNTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* pixels);
LX_API extern PFNGLGETNTEXIMAGEPROC lx_glGetnTexImage;
#define glGetnTexImage lx_glGetnTexImage

typedef void (LX_GL_API_PTR PFNGLGETNUNIFORMDVPROC)(GLuint program, GLint location, GLsizei bufSize, GLdouble* params);
LX_API extern PFNGLGETNUNIFORMDVPROC lx_glGetnUniformdv;
#define glGetnUniformdv lx_glGetnUniformdv

typedef void (LX_GL_API_PTR PFNGLGETNUNIFORMFVPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat* params);
LX_API extern PFNGLGETNUNIFORMFVPROC lx_glGetnUniformfv;
#define glGetnUniformfv lx_glGetnUniformfv

typedef void (LX_GL_API_PTR PFNGLGETNUNIFORMIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLint* params);
LX_API extern PFNGLGETNUNIFORMIVPROC lx_glGetnUniformiv;
#define glGetnUniformiv lx_glGetnUniformiv

typedef void (LX_GL_API_PTR PFNGLGETNUNIFORMUIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint* params);
LX_API extern PFNGLGETNUNIFORMUIVPROC lx_glGetnUniformuiv;
#define glGetnUniformuiv lx_glGetnUniformuiv

typedef void (LX_GL_API_PTR PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum* attachments);
LX_API extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC lx_glInvalidateNamedFramebufferData;
#define glInvalidateNamedFramebufferData lx_glInvalidateNamedFramebufferData

typedef void (LX_GL_API_PTR PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
LX_API extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC lx_glInvalidateNamedFramebufferSubData;
#define glInvalidateNamedFramebufferSubData lx_glInvalidateNamedFramebufferSubData

typedef void* (LX_GL_API_PTR PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer, GLenum access);
LX_API extern PFNGLMAPNAMEDBUFFERPROC lx_glMapNamedBuffer;
#define glMapNamedBuffer lx_glMapNamedBuffer

typedef void* (LX_GL_API_PTR PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
LX_API extern PFNGLMAPNAMEDBUFFERRANGEPROC lx_glMapNamedBufferRange;
#define glMapNamedBufferRange lx_glMapNamedBufferRange

typedef void (LX_GL_API_PTR PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);
LX_API extern PFNGLMEMORYBARRIERBYREGIONPROC lx_glMemoryBarrierByRegion;
#define glMemoryBarrierByRegion lx_glMemoryBarrierByRegion

typedef void (LX_GL_API_PTR PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer, GLsizeiptr size, const void* data, GLenum usage);
LX_API extern PFNGLNAMEDBUFFERDATAPROC lx_glNamedBufferData;
#define glNamedBufferData lx_glNamedBufferData

typedef void (LX_GL_API_PTR PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer, GLsizeiptr size, const void* data, GLbitfield flags);
LX_API extern PFNGLNAMEDBUFFERSTORAGEPROC lx_glNamedBufferStorage;
#define glNamedBufferStorage lx_glNamedBufferStorage

typedef void (LX_GL_API_PTR PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void* data);
LX_API extern PFNGLNAMEDBUFFERSUBDATAPROC lx_glNamedBufferSubData;
#define glNamedBufferSubData lx_glNamedBufferSubData

typedef void (LX_GL_API_PTR PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer, GLenum buf);
LX_API extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC lx_glNamedFramebufferDrawBuffer;
#define glNamedFramebufferDrawBuffer lx_glNamedFramebufferDrawBuffer

typedef void (LX_GL_API_PTR PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(GLuint framebuffer, GLsizei n, const GLenum* bufs);
LX_API extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC lx_glNamedFramebufferDrawBuffers;
#define glNamedFramebufferDrawBuffers lx_glNamedFramebufferDrawBuffers

typedef void (LX_GL_API_PTR PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer, GLenum pname, GLint param);
LX_API extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC lx_glNamedFramebufferParameteri;
#define glNamedFramebufferParameteri lx_glNamedFramebufferParameteri

typedef void (LX_GL_API_PTR PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer, GLenum src);
LX_API extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC lx_glNamedFramebufferReadBuffer;
#define glNamedFramebufferReadBuffer lx_glNamedFramebufferReadBuffer

typedef void (LX_GL_API_PTR PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
LX_API extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC lx_glNamedFramebufferRenderbuffer;
#define glNamedFramebufferRenderbuffer lx_glNamedFramebufferRenderbuffer

typedef void (LX_GL_API_PTR PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
LX_API extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC lx_glNamedFramebufferTexture;
#define glNamedFramebufferTexture lx_glNamedFramebufferTexture

typedef void (LX_GL_API_PTR PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
LX_API extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC lx_glNamedFramebufferTextureLayer;
#define glNamedFramebufferTextureLayer lx_glNamedFramebufferTextureLayer

typedef void (LX_GL_API_PTR PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
LX_API extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC lx_glNamedRenderbufferStorage;
#define glNamedRenderbufferStorage lx_glNamedRenderbufferStorage

typedef void (LX_GL_API_PTR PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
LX_API extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC lx_glNamedRenderbufferStorageMultisample;
#define glNamedRenderbufferStorageMultisample lx_glNamedRenderbufferStorageMultisample

typedef void (LX_GL_API_PTR PFNGLREADNPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void* data);
LX_API extern PFNGLREADNPIXELSPROC lx_glReadnPixels;
#define glReadnPixels lx_glReadnPixels

typedef void (LX_GL_API_PTR PFNGLTEXTUREBARRIERPROC)(void);
LX_API extern PFNGLTEXTUREBARRIERPROC lx_glTextureBarrier;
#define glTextureBarrier lx_glTextureBarrier

typedef void (LX_GL_API_PTR PFNGLTEXTUREBUFFERPROC)(GLuint texture, GLenum internalformat, GLuint buffer);
LX_API extern PFNGLTEXTUREBUFFERPROC lx_glTextureBuffer;
#define glTextureBuffer lx_glTextureBuffer

typedef void (LX_GL_API_PTR PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
LX_API extern PFNGLTEXTUREBUFFERRANGEPROC lx_glTextureBufferRange;
#define glTextureBufferRange lx_glTextureBufferRange

typedef void (LX_GL_API_PTR PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, const GLint* params);
LX_API extern PFNGLTEXTUREPARAMETERIIVPROC lx_glTextureParameterIiv;
#define glTextureParameterIiv lx_glTextureParameterIiv

typedef void (LX_GL_API_PTR PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, const GLuint* params);
LX_API extern PFNGLTEXTUREPARAMETERIUIVPROC lx_glTextureParameterIuiv;
#define glTextureParameterIuiv lx_glTextureParameterIuiv

typedef void (LX_GL_API_PTR PFNGLTEXTUREPARAMETERFPROC)(GLuint texture, GLenum pname, GLfloat param);
LX_API extern PFNGLTEXTUREPARAMETERFPROC lx_glTextureParameterf;
#define glTextureParameterf lx_glTextureParameterf

typedef void (LX_GL_API_PTR PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, const GLfloat* param);
LX_API extern PFNGLTEXTUREPARAMETERFVPROC lx_glTextureParameterfv;
#define glTextureParameterfv lx_glTextureParameterfv

typedef void (LX_GL_API_PTR PFNGLTEXTUREPARAMETERIPROC)(GLuint texture, GLenum pname, GLint param);
LX_API extern PFNGLTEXTUREPARAMETERIPROC lx_glTextureParameteri;
#define glTextureParameteri lx_glTextureParameteri

typedef void (LX_GL_API_PTR PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, const GLint* param);
LX_API extern PFNGLTEXTUREPARAMETERIVPROC lx_glTextureParameteriv;
#define glTextureParameteriv lx_glTextureParameteriv

typedef void (LX_GL_API_PTR PFNGLTEXTURESTORAGE1DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
LX_API extern PFNGLTEXTURESTORAGE1DPROC lx_glTextureStorage1D;
#define glTextureStorage1D lx_glTextureStorage1D

typedef void (LX_GL_API_PTR PFNGLTEXTURESTORAGE2DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
LX_API extern PFNGLTEXTURESTORAGE2DPROC lx_glTextureStorage2D;
#define glTextureStorage2D lx_glTextureStorage2D

typedef void (LX_GL_API_PTR PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
LX_API extern PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC lx_glTextureStorage2DMultisample;
#define glTextureStorage2DMultisample lx_glTextureStorage2DMultisample

typedef void (LX_GL_API_PTR PFNGLTEXTURESTORAGE3DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
LX_API extern PFNGLTEXTURESTORAGE3DPROC lx_glTextureStorage3D;
#define glTextureStorage3D lx_glTextureStorage3D

typedef void (LX_GL_API_PTR PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
LX_API extern PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC lx_glTextureStorage3DMultisample;
#define glTextureStorage3DMultisample lx_glTextureStorage3DMultisample

typedef void (LX_GL_API_PTR PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels);
LX_API extern PFNGLTEXTURESUBIMAGE1DPROC lx_glTextureSubImage1D;
#define glTextureSubImage1D lx_glTextureSubImage1D

typedef void (LX_GL_API_PTR PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
LX_API extern PFNGLTEXTURESUBIMAGE2DPROC lx_glTextureSubImage2D;
#define glTextureSubImage2D lx_glTextureSubImage2D

typedef void (LX_GL_API_PTR PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels);
LX_API extern PFNGLTEXTURESUBIMAGE3DPROC lx_glTextureSubImage3D;
#define glTextureSubImage3D lx_glTextureSubImage3D

typedef void (LX_GL_API_PTR PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb, GLuint index, GLuint buffer);
LX_API extern PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC lx_glTransformFeedbackBufferBase;
#define glTransformFeedbackBufferBase lx_glTransformFeedbackBufferBase

typedef void (LX_GL_API_PTR PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
LX_API extern PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC lx_glTransformFeedbackBufferRange;
#define glTransformFeedbackBufferRange lx_glTransformFeedbackBufferRange

typedef GLboolean (LX_GL_API_PTR PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer);
LX_API extern PFNGLUNMAPNAMEDBUFFERPROC lx_glUnmapNamedBuffer;
#define glUnmapNamedBuffer lx_glUnmapNamedBuffer

typedef void (LX_GL_API_PTR PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
LX_API extern PFNGLVERTEXARRAYATTRIBBINDINGPROC lx_glVertexArrayAttribBinding;
#define glVertexArrayAttribBinding lx_glVertexArrayAttribBinding

typedef void (LX_GL_API_PTR PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
LX_API extern PFNGLVERTEXARRAYATTRIBFORMATPROC lx_glVertexArrayAttribFormat;
#define glVertexArrayAttribFormat lx_glVertexArrayAttribFormat

typedef void (LX_GL_API_PTR PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
LX_API extern PFNGLVERTEXARRAYATTRIBIFORMATPROC lx_glVertexArrayAttribIFormat;
#define glVertexArrayAttribIFormat lx_glVertexArrayAttribIFormat

typedef void (LX_GL_API_PTR PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
LX_API extern PFNGLVERTEXARRAYATTRIBLFORMATPROC lx_glVertexArrayAttribLFormat;
#define glVertexArrayAttribLFormat lx_glVertexArrayAttribLFormat

typedef void (LX_GL_API_PTR PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
LX_API extern PFNGLVERTEXARRAYBINDINGDIVISORPROC lx_glVertexArrayBindingDivisor;
#define glVertexArrayBindingDivisor lx_glVertexArrayBindingDivisor

typedef void (LX_GL_API_PTR PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj, GLuint buffer);
LX_API extern PFNGLVERTEXARRAYELEMENTBUFFERPROC lx_glVertexArrayElementBuffer;
#define glVertexArrayElementBuffer lx_glVertexArrayElementBuffer

typedef void (LX_GL_API_PTR PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
LX_API extern PFNGLVERTEXARRAYVERTEXBUFFERPROC lx_glVertexArrayVertexBuffer;
#define glVertexArrayVertexBuffer lx_glVertexArrayVertexBuffer

typedef void (LX_GL_API_PTR PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj, GLuint first, GLsizei count, const GLuint* buffers, const GLintptr* offsets, const GLsizei* strides);
LX_API extern PFNGLVERTEXARRAYVERTEXBUFFERSPROC lx_glVertexArrayVertexBuffers;
#define glVertexArrayVertexBuffers lx_glVertexArrayVertexBuffers

// opengl 4.6
// ----------------------------------------------------------------

typedef void (LX_GL_API_PTR PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)(GLenum mode, const void* indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
LX_API extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC lx_glMultiDrawArraysIndirectCount;
#define glMultiDrawArraysIndirectCount lx_glMultiDrawArraysIndirectCount

typedef void (LX_GL_API_PTR PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC)(GLenum mode, GLenum type, const void* indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
LX_API extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC lx_glMultiDrawElementsIndirectCount;
#define glMultiDrawElementsIndirectCount lx_glMultiDrawElementsIndirectCount

typedef void (LX_GL_API_PTR PFNGLPOLYGONOFFSETCLAMPPROC)(GLfloat factor, GLfloat units, GLfloat clamp);
LX_API extern PFNGLPOLYGONOFFSETCLAMPPROC lx_glPolygonOffsetClamp;
#define glPolygonOffsetClamp lx_glPolygonOffsetClamp

typedef void (LX_GL_API_PTR PFNGLSPECIALIZESHADERPROC)(GLuint shader, const GLchar* pEntryPoint, GLuint numSpecializationConstants, const GLuint* pConstantIndex, const GLuint* pConstantValue);
LX_API extern PFNGLSPECIALIZESHADERPROC lx_glSpecializeShader;
#define glSpecializeShader lx_glSpecializeShader

LX_END_HEADER
